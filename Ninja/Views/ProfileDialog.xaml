<!--
    Note: The validation is performed several times. In the "Save" button
    to enable/disable it AND in the list view (rectangle) to indicate that
    a page has an error.
-->
<UserControl
    x:Class="Ninja.Views.ProfileDialog"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converters="clr-namespace:Ninja.Converters;assembly=Ninja.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
    xmlns:interactivity="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:localization="clr-namespace:Ninja.Localization.Resources;assembly=Ninja.Localization"
    xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:network="clr-namespace:Ninja.Models.Network;assembly=Ninja.Models"
    xmlns:profiles="clr-namespace:Ninja.Profiles;assembly=Ninja.Profiles"
    xmlns:validators="clr-namespace:Ninja.Validators;assembly=Ninja.Validators"
    xmlns:viewModels="clr-namespace:Ninja.ViewModels"
    xmlns:wpfHelpers="clr-namespace:Ninja.Utilities.WPF;assembly=Ninja.Utilities.WPF"
    d:DataContext="{d:DesignInstance viewModels:ProfileViewModel}"
    Loaded="UserControl_Loaded"
    mc:Ignorable="d">
    <UserControl.Resources>
        <converters:BooleanReverseConverter x:Key="BooleanReverseConverter" />
        <converters:BooleanReverseToVisibilityCollapsedConverter x:Key="BooleanReverseToVisibilityCollapsedConverter" />
        <converters:BooleanToVisibilityCollapsedConverter x:Key="BooleanToVisibilityCollapsedConverter" />
        <converters:RemoteDesktopAudioCaptureRedirectionModeToStringConverter x:Key="RemoteDesktopAudioCaptureRedirectionModeToStringConverter" />
        <converters:RemoteDesktopAudioRedirectionModeToStringConverter x:Key="RemoteDesktopAudioRedirectionModeToStringConverter" />
        <converters:RemoteDesktopKeyboardHookModeToStringConverter x:Key="RemoteDesktopKeyboardHookModeToStringConverter" />
        <converters:RemoteDesktopGatewayServerLogonMethodToStringConverter x:Key="RemoteDesktopGatewayServerLogonMethodToStringConverter" />
        <converters:RemoteDesktopNetworkConnectionTypeToStringConverter x:Key="RemoteDesktopNetworkConnectionTypeToStringConverter" />
        <converters:ProfileNameToTranslatedStringConverter x:Key="ProfileNameToTranslatedStringConverter" />
        <converters:PuTTYLogModeToStringConverter x:Key="PuTTYLogModeToStringConverter" />
        <converters:StringIsNotNullOrEmptyOrIPv4AddressToBooleanConverter x:Key="StringIsNotNullOrEmptyOrIPv4AddressToBooleanConverter" />
    </UserControl.Resources>
    <Grid Margin="0,20">
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="10" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Grid Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Border
                BorderBrush="{DynamicResource MahApps.Brushes.Gray8}"
                BorderThickness="0,0,1,0">
                <ScrollViewer
                    Margin="0,0,10,0"
                    ManipulationBoundaryFeedback="ScrollViewer_ManipulationBoundaryFeedback">
                    <ListBox
                        x:Name="ListBoxViews"
                        Margin="0,0,10,0"
                        ItemsSource="{Binding ProfileViews}">
                        <ListBox.Resources>
                            <wpfHelpers:BindingProxy
                                x:Key="BindingProxy"
                                Data="{Binding}" />
                        </ListBox.Resources>
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="10" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="10" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <Rectangle
                                        Grid.Column="0"
                                        Width="20"
                                        Height="20"
                                        Margin="10,0">
                                        <Rectangle.OpacityMask>
                                            <VisualBrush
                                                Stretch="Uniform"
                                                Visual="{Binding Icon}" />
                                        </Rectangle.OpacityMask>
                                        <Rectangle.Style>
                                            <Style TargetType="{x:Type Rectangle}">
                                                <Setter Property="Fill" Value="{DynamicResource MahApps.Brushes.Gray3}" />
                                                <Style.Triggers>
                                                    <DataTrigger
                                                        Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}"
                                                        Value="True">
                                                        <Setter Property="Fill" Value="{DynamicResource MahApps.Brushes.Gray5}" />
                                                    </DataTrigger>
                                                    <DataTrigger
                                                        Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}"
                                                        Value="True">
                                                        <Setter Property="Fill" Value="{DynamicResource MahApps.Brushes.Accent}" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Rectangle.Style>
                                    </Rectangle>
                                    <TextBlock
                                        Grid.Column="1"
                                        Text="{Binding (profiles:ProfileViewInfo.Name), Converter={StaticResource ProfileNameToTranslatedStringConverter}}">
                                        <TextBlock.Style>
                                            <Style TargetType="{x:Type TextBlock}">
                                                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Gray3}" />
                                                <Setter Property="Margin" Value="0,0,10,0" />
                                                <Setter Property="VerticalAlignment" Value="Center" />
                                                <Setter Property="FontSize" Value="14" />
                                                <Style.Triggers>
                                                    <DataTrigger
                                                        Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}"
                                                        Value="True">
                                                        <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Gray5}" />
                                                    </DataTrigger>
                                                    <DataTrigger
                                                        Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}"
                                                        Value="True">
                                                        <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Accent}" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                    <Rectangle
                                        Grid.Row="0"
                                        Grid.Column="3"
                                        Width="24"
                                        Height="24"
                                        ToolTip="{x:Static localization:Strings.ErrorMessage_TabPageHasError}">
                                        <Rectangle.Resources>
                                            <Style
                                                BasedOn="{StaticResource ErrorToolTip}"
                                                TargetType="{x:Type ToolTip}" />
                                        </Rectangle.Resources>
                                        <Rectangle.Style>
                                            <Style
                                                BasedOn="{StaticResource ErrorImageRectangle}"
                                                TargetType="{x:Type Rectangle}">
                                                <Setter Property="Visibility" Value="Hidden" />
                                                <Style.Triggers>
                                                    <!--  General  -->
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding (profiles:ProfileViewInfo.Name)}" Value="{x:Static profiles:ProfileName.General}" />
                                                            <Condition Binding="{Binding ElementName=TextBoxName, Path=(Validation.HasError)}" Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <MultiDataTrigger.Setters>
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </MultiDataTrigger.Setters>
                                                    </MultiDataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding (profiles:ProfileViewInfo.Name)}" Value="{x:Static profiles:ProfileName.General}" />
                                                            <Condition Binding="{Binding ElementName=TextBoxHost, Path=(Validation.HasError)}" Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <MultiDataTrigger.Setters>
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </MultiDataTrigger.Setters>
                                                    </MultiDataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding (profiles:ProfileViewInfo.Name)}" Value="{x:Static profiles:ProfileName.General}" />
                                                            <Condition Binding="{Binding ElementName=ComboBoxGroup, Path=(Validation.HasError)}" Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <MultiDataTrigger.Setters>
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </MultiDataTrigger.Setters>
                                                    </MultiDataTrigger>
                                                    <!--  Network Interface  -->
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding (profiles:ProfileViewInfo.Name)}" Value="{x:Static profiles:ProfileName.NetworkInterface}" />
                                                            <Condition Binding="{Binding Data.NetworkInterface_Enabled, Source={StaticResource BindingProxy}}" Value="True" />
                                                            <Condition Binding="{Binding Data.NetworkInterface_EnableStaticIPAddress, Source={StaticResource BindingProxy}}" Value="True" />
                                                            <Condition Binding="{Binding ElementName=TextBoxNetworkInterfaceIPAddress, Path=(Validation.HasError)}" Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <MultiDataTrigger.Setters>
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </MultiDataTrigger.Setters>
                                                    </MultiDataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding (profiles:ProfileViewInfo.Name)}" Value="{x:Static profiles:ProfileName.NetworkInterface}" />
                                                            <Condition Binding="{Binding Data.NetworkInterface_Enabled, Source={StaticResource BindingProxy}}" Value="True" />
                                                            <Condition Binding="{Binding Data.NetworkInterface_EnableStaticIPAddress, Source={StaticResource BindingProxy}}" Value="True" />
                                                            <Condition Binding="{Binding ElementName=ComboBoxNetworkInterfaceSubnetmask, Path=(Validation.HasError)}" Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <MultiDataTrigger.Setters>
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </MultiDataTrigger.Setters>
                                                    </MultiDataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding (profiles:ProfileViewInfo.Name)}" Value="{x:Static profiles:ProfileName.NetworkInterface}" />
                                                            <Condition Binding="{Binding Data.NetworkInterface_Enabled, Source={StaticResource BindingProxy}}" Value="True" />
                                                            <Condition Binding="{Binding Data.NetworkInterface_EnableStaticIPAddress, Source={StaticResource BindingProxy}}" Value="True" />
                                                            <Condition Binding="{Binding ElementName=TextBoxNetworkInterfaceGateway, Path=(Validation.HasError)}" Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <MultiDataTrigger.Setters>
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </MultiDataTrigger.Setters>
                                                    </MultiDataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding (profiles:ProfileViewInfo.Name)}" Value="{x:Static profiles:ProfileName.NetworkInterface}" />
                                                            <Condition Binding="{Binding Data.NetworkInterface_Enabled, Source={StaticResource BindingProxy}}" Value="True" />
                                                            <Condition Binding="{Binding Data.NetworkInterface_EnableStaticDNS, Source={StaticResource BindingProxy}}" Value="True" />
                                                            <Condition Binding="{Binding ElementName=TextBoxNetworkInterfacePrimaryDNSServer, Path=(Validation.HasError)}" Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <MultiDataTrigger.Setters>
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </MultiDataTrigger.Setters>
                                                    </MultiDataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding (profiles:ProfileViewInfo.Name)}" Value="{x:Static profiles:ProfileName.NetworkInterface}" />
                                                            <Condition Binding="{Binding Data.NetworkInterface_Enabled, Source={StaticResource BindingProxy}}" Value="True" />
                                                            <Condition Binding="{Binding Data.NetworkInterface_EnableStaticDNS, Source={StaticResource BindingProxy}}" Value="True" />
                                                            <Condition Binding="{Binding ElementName=TextBoxNetworkInterfaceSecondaryDNSServer, Path=(Validation.HasError)}" Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <MultiDataTrigger.Setters>
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </MultiDataTrigger.Setters>
                                                    </MultiDataTrigger>
                                                    <!--  IP Scanner  -->
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding (profiles:ProfileViewInfo.Name)}" Value="{x:Static profiles:ProfileName.IPScanner}" />
                                                            <Condition Binding="{Binding Data.IPScanner_Enabled, Source={StaticResource BindingProxy}}" Value="True" />
                                                            <Condition Binding="{Binding Data.IPScanner_InheritHost, Source={StaticResource BindingProxy}}" Value="False" />
                                                            <Condition Binding="{Binding ElementName=TextBoxIPScannerIPRange, Path=(Validation.HasError)}" Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <MultiDataTrigger.Setters>
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </MultiDataTrigger.Setters>
                                                    </MultiDataTrigger>
                                                    <!--  Port Scanner  -->
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding (profiles:ProfileViewInfo.Name)}" Value="{x:Static profiles:ProfileName.PortScanner}" />
                                                            <Condition Binding="{Binding Data.PortScanner_Enabled, Source={StaticResource BindingProxy}}" Value="True" />
                                                            <Condition Binding="{Binding Data.PortScanner_InheritHost, Source={StaticResource BindingProxy}}" Value="False" />
                                                            <Condition Binding="{Binding ElementName=TextBoxPortScannerHost, Path=(Validation.HasError)}" Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <MultiDataTrigger.Setters>
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </MultiDataTrigger.Setters>
                                                    </MultiDataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding (profiles:ProfileViewInfo.Name)}" Value="{x:Static profiles:ProfileName.PortScanner}" />
                                                            <Condition Binding="{Binding Data.PortScanner_Enabled, Source={StaticResource BindingProxy}}" Value="True" />
                                                            <Condition Binding="{Binding ElementName=TextBoxPortScannerPorts, Path=(Validation.HasError)}" Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <MultiDataTrigger.Setters>
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </MultiDataTrigger.Setters>
                                                    </MultiDataTrigger>
                                                    <!--  Ping Monitor  -->
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding (profiles:ProfileViewInfo.Name)}" Value="{x:Static profiles:ProfileName.PingMonitor}" />
                                                            <Condition Binding="{Binding Data.PingMonitor_Enabled, Source={StaticResource BindingProxy}}" Value="True" />
                                                            <Condition Binding="{Binding Data.PingMonitor_InheritHost, Source={StaticResource BindingProxy}}" Value="False" />
                                                            <Condition Binding="{Binding ElementName=TextBoxPingMonitorHost, Path=(Validation.HasError)}" Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <MultiDataTrigger.Setters>
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </MultiDataTrigger.Setters>
                                                    </MultiDataTrigger>
                                                    <!--  Traceroute  -->
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding (profiles:ProfileViewInfo.Name)}" Value="{x:Static profiles:ProfileName.Traceroute}" />
                                                            <Condition Binding="{Binding Data.Traceroute_Enabled, Source={StaticResource BindingProxy}}" Value="True" />
                                                            <Condition Binding="{Binding Data.Traceroute_InheritHost, Source={StaticResource BindingProxy}}" Value="False" />
                                                            <Condition Binding="{Binding ElementName=TextBoxTracerouteHost, Path=(Validation.HasError)}" Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <MultiDataTrigger.Setters>
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </MultiDataTrigger.Setters>
                                                    </MultiDataTrigger>
                                                    <!--  DNS Lookup  -->
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding (profiles:ProfileViewInfo.Name)}" Value="{x:Static profiles:ProfileName.DNSLookup}" />
                                                            <Condition Binding="{Binding Data.DNSLookup_Enabled, Source={StaticResource BindingProxy}}" Value="True" />
                                                            <Condition Binding="{Binding Data.DNSLookup_InheritHost, Source={StaticResource BindingProxy}}" Value="False" />
                                                            <Condition Binding="{Binding ElementName=TextBoxDNSLookupHost, Path=(Validation.HasError)}" Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <MultiDataTrigger.Setters>
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </MultiDataTrigger.Setters>
                                                    </MultiDataTrigger>
                                                    <!--  Remote Desktop  -->
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding (profiles:ProfileViewInfo.Name)}" Value="{x:Static profiles:ProfileName.RemoteDesktop}" />
                                                            <Condition Binding="{Binding Data.RemoteDesktop_Enabled, Source={StaticResource BindingProxy}}" Value="True" />
                                                            <Condition Binding="{Binding Data.RemoteDesktop_InheritHost, Source={StaticResource BindingProxy}}" Value="False" />
                                                            <Condition Binding="{Binding ElementName=TextBoxRemoteDesktopHost, Path=(Validation.HasError)}" Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <MultiDataTrigger.Setters>
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </MultiDataTrigger.Setters>
                                                    </MultiDataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding (profiles:ProfileViewInfo.Name)}" Value="{x:Static profiles:ProfileName.RemoteDesktop}" />
                                                            <Condition Binding="{Binding Data.RemoteDesktop_Enabled, Source={StaticResource BindingProxy}}" Value="True" />
                                                            <Condition Binding="{Binding Data.RemoteDesktop_UseCredentials, Source={StaticResource BindingProxy}}" Value="True" />
                                                            <Condition Binding="{Binding ElementName=TextBoxRemoteDesktopUsername, Path=(Validation.HasError)}" Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <MultiDataTrigger.Setters>
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </MultiDataTrigger.Setters>
                                                    </MultiDataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding (profiles:ProfileViewInfo.Name)}" Value="{x:Static profiles:ProfileName.RemoteDesktop}" />
                                                            <Condition Binding="{Binding Data.RemoteDesktop_Enabled, Source={StaticResource BindingProxy}}" Value="True" />
                                                            <Condition Binding="{Binding Data.RemoteDesktop_UseCredentials, Source={StaticResource BindingProxy}}" Value="True" />
                                                            <Condition Binding="{Binding ElementName=TextBoxRemoteDesktopDomain, Path=(Validation.HasError)}" Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <MultiDataTrigger.Setters>
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </MultiDataTrigger.Setters>
                                                    </MultiDataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding (profiles:ProfileViewInfo.Name)}" Value="{x:Static profiles:ProfileName.RemoteDesktop}" />
                                                            <Condition Binding="{Binding Data.RemoteDesktop_Enabled, Source={StaticResource BindingProxy}}" Value="True" />
                                                            <Condition Binding="{Binding Data.RemoteDesktop_UseCredentials, Source={StaticResource BindingProxy}}" Value="True" />
                                                            <Condition Binding="{Binding Data.RemoteDesktop_IsPasswordEmpty, Source={StaticResource BindingProxy}}" Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <MultiDataTrigger.Setters>
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </MultiDataTrigger.Setters>
                                                    </MultiDataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding (profiles:ProfileViewInfo.Name)}" Value="{x:Static profiles:ProfileName.RemoteDesktop}" />
                                                            <Condition Binding="{Binding Data.RemoteDesktop_Enabled, Source={StaticResource BindingProxy}}" Value="True" />
                                                            <Condition Binding="{Binding Data.RemoteDesktop_OverridePort, Source={StaticResource BindingProxy}}" Value="True" />
                                                            <Condition Binding="{Binding ElementName=TextBoxRemoteDesktopPort, Path=(Validation.HasError)}" Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <MultiDataTrigger.Setters>
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </MultiDataTrigger.Setters>
                                                    </MultiDataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding (profiles:ProfileViewInfo.Name)}" Value="{x:Static profiles:ProfileName.RemoteDesktop}" />
                                                            <Condition Binding="{Binding Data.RemoteDesktop_Enabled, Source={StaticResource BindingProxy}}" Value="True" />
                                                            <Condition Binding="{Binding Data.RemoteDesktop_OverrideGatewayServer, Source={StaticResource BindingProxy}}" Value="True" />
                                                            <Condition Binding="{Binding Data.RemoteDesktop_EnableGatewayServer, Source={StaticResource BindingProxy}}" Value="True" />
                                                            <Condition Binding="{Binding ElementName=TextBoxRemoteDesktopGatewayServerHostname, Path=(Validation.HasError)}" Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <MultiDataTrigger.Setters>
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </MultiDataTrigger.Setters>
                                                    </MultiDataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding (profiles:ProfileViewInfo.Name)}" Value="{x:Static profiles:ProfileName.RemoteDesktop}" />
                                                            <Condition Binding="{Binding Data.RemoteDesktop_Enabled, Source={StaticResource BindingProxy}}" Value="True" />
                                                            <Condition Binding="{Binding Data.RemoteDesktop_OverrideGatewayServer, Source={StaticResource BindingProxy}}" Value="True" />
                                                            <Condition Binding="{Binding Data.RemoteDesktop_EnableGatewayServer, Source={StaticResource BindingProxy}}" Value="True" />
                                                            <Condition Binding="{Binding Data.RemoteDesktop_GatewayServerLogonMethod, Source={StaticResource BindingProxy}}" Value="Userpass" />
                                                            <Condition Binding="{Binding Data.RemoteDesktop_UseGatewayServerCredentials, Source={StaticResource BindingProxy}}" Value="True" />
                                                            <Condition Binding="{Binding ElementName=TextBoxRemoteDesktopGatewayServerUsername, Path=(Validation.HasError)}" Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <MultiDataTrigger.Setters>
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </MultiDataTrigger.Setters>
                                                    </MultiDataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding (profiles:ProfileViewInfo.Name)}" Value="{x:Static profiles:ProfileName.RemoteDesktop}" />
                                                            <Condition Binding="{Binding Data.RemoteDesktop_Enabled, Source={StaticResource BindingProxy}}" Value="True" />
                                                            <Condition Binding="{Binding Data.RemoteDesktop_OverrideGatewayServer, Source={StaticResource BindingProxy}}" Value="True" />
                                                            <Condition Binding="{Binding Data.RemoteDesktop_EnableGatewayServer, Source={StaticResource BindingProxy}}" Value="True" />
                                                            <Condition Binding="{Binding Data.RemoteDesktop_GatewayServerLogonMethod, Source={StaticResource BindingProxy}}" Value="Userpass" />
                                                            <Condition Binding="{Binding Data.RemoteDesktop_UseGatewayServerCredentials, Source={StaticResource BindingProxy}}" Value="True" />
                                                            <Condition Binding="{Binding ElementName=TextBoxRemoteDesktopGatewayServerDomain, Path=(Validation.HasError)}" Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <MultiDataTrigger.Setters>
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </MultiDataTrigger.Setters>
                                                    </MultiDataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding (profiles:ProfileViewInfo.Name)}" Value="{x:Static profiles:ProfileName.RemoteDesktop}" />
                                                            <Condition Binding="{Binding Data.RemoteDesktop_Enabled, Source={StaticResource BindingProxy}}" Value="True" />
                                                            <Condition Binding="{Binding Data.RemoteDesktop_OverrideGatewayServer, Source={StaticResource BindingProxy}}" Value="True" />
                                                            <Condition Binding="{Binding Data.RemoteDesktop_EnableGatewayServer, Source={StaticResource BindingProxy}}" Value="True" />
                                                            <Condition Binding="{Binding Data.RemoteDesktop_GatewayServerLogonMethod, Source={StaticResource BindingProxy}}" Value="Userpass" />
                                                            <Condition Binding="{Binding Data.RemoteDesktop_UseGatewayServerCredentials, Source={StaticResource BindingProxy}}" Value="True" />
                                                            <Condition Binding="{Binding Data.RemoteDesktop_IsGatewayServerPasswordEmpty, Source={StaticResource BindingProxy}}" Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <MultiDataTrigger.Setters>
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </MultiDataTrigger.Setters>
                                                    </MultiDataTrigger>
                                                    <!--  PowerShell  -->
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding (profiles:ProfileViewInfo.Name)}" Value="{x:Static profiles:ProfileName.PowerShell}" />
                                                            <Condition Binding="{Binding Data.PowerShell_Enabled, Source={StaticResource BindingProxy}}" Value="True" />
                                                            <Condition Binding="{Binding Data.PowerShell_EnableRemoteConsole, Source={StaticResource BindingProxy}}" Value="True" />
                                                            <Condition Binding="{Binding Data.PowerShell_InheritHost, Source={StaticResource BindingProxy}}" Value="False" />
                                                            <Condition Binding="{Binding ElementName=TextBoxPowerShellHost, Path=(Validation.HasError)}" Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <MultiDataTrigger.Setters>
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </MultiDataTrigger.Setters>
                                                    </MultiDataTrigger>
                                                    <!--  PuTTY  -->
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding (profiles:ProfileViewInfo.Name)}" Value="{x:Static profiles:ProfileName.PuTTY}" />
                                                            <Condition Binding="{Binding Data.PuTTY_Enabled, Source={StaticResource BindingProxy}}" Value="True" />
                                                            <Condition Binding="{Binding Data.PuTTY_InheritHost, Source={StaticResource BindingProxy}}" Value="False" />
                                                            <Condition Binding="{Binding Data.PuTTY_UseSerial, Source={StaticResource BindingProxy}}" Value="False" />
                                                            <Condition Binding="{Binding ElementName=TextBoxPuTTYHost, Path=(Validation.HasError)}" Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <MultiDataTrigger.Setters>
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </MultiDataTrigger.Setters>
                                                    </MultiDataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding (profiles:ProfileViewInfo.Name)}" Value="{x:Static profiles:ProfileName.PuTTY}" />
                                                            <Condition Binding="{Binding Data.PuTTY_Enabled, Source={StaticResource BindingProxy}}" Value="True" />
                                                            <Condition Binding="{Binding Data.PuTTY_UseSerial, Source={StaticResource BindingProxy}}" Value="True" />
                                                            <Condition Binding="{Binding ElementName=TextBoxPuTTYSerialLine, Path=(Validation.HasError)}" Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <MultiDataTrigger.Setters>
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </MultiDataTrigger.Setters>
                                                    </MultiDataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding (profiles:ProfileViewInfo.Name)}" Value="{x:Static profiles:ProfileName.PuTTY}" />
                                                            <Condition Binding="{Binding Data.PuTTY_Enabled, Source={StaticResource BindingProxy}}" Value="True" />
                                                            <Condition Binding="{Binding Data.PuTTY_OverridePortOrBaud, Source={StaticResource BindingProxy}}" Value="True" />
                                                            <Condition Binding="{Binding Data.PuTTY_UseSerial, Source={StaticResource BindingProxy}}" Value="False" />
                                                            <Condition Binding="{Binding ElementName=TextBoxPuTTYPort, Path=(Validation.HasError)}" Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <MultiDataTrigger.Setters>
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </MultiDataTrigger.Setters>
                                                    </MultiDataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding (profiles:ProfileViewInfo.Name)}" Value="{x:Static profiles:ProfileName.PuTTY}" />
                                                            <Condition Binding="{Binding Data.PuTTY_Enabled, Source={StaticResource BindingProxy}}" Value="True" />
                                                            <Condition Binding="{Binding Data.PuTTY_OverridePortOrBaud, Source={StaticResource BindingProxy}}" Value="True" />
                                                            <Condition Binding="{Binding Data.PuTTY_UseSerial, Source={StaticResource BindingProxy}}" Value="True" />
                                                            <Condition Binding="{Binding ElementName=TextBoxPuTTYBaud, Path=(Validation.HasError)}" Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <MultiDataTrigger.Setters>
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </MultiDataTrigger.Setters>
                                                    </MultiDataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding (profiles:ProfileViewInfo.Name)}" Value="{x:Static profiles:ProfileName.PuTTY}" />
                                                            <Condition Binding="{Binding Data.PuTTY_Enabled, Source={StaticResource BindingProxy}}" Value="True" />
                                                            <Condition Binding="{Binding Data.PuTTY_OverrideUsername, Source={StaticResource BindingProxy}}" Value="True" />
                                                            <Condition Binding="{Binding ElementName=TextBoxPuTTYUsername, Path=(Validation.HasError)}" Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <MultiDataTrigger.Setters>
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </MultiDataTrigger.Setters>
                                                    </MultiDataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding (profiles:ProfileViewInfo.Name)}" Value="{x:Static profiles:ProfileName.PuTTY}" />
                                                            <Condition Binding="{Binding Data.PuTTY_Enabled, Source={StaticResource BindingProxy}}" Value="True" />
                                                            <Condition Binding="{Binding Data.PuTTY_OverridePrivateKeyFile, Source={StaticResource BindingProxy}}" Value="True" />
                                                            <Condition Binding="{Binding ElementName=TextBoxPuTTYPrivateKeyFile, Path=(Validation.HasError)}" Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <MultiDataTrigger.Setters>
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </MultiDataTrigger.Setters>
                                                    </MultiDataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding (profiles:ProfileViewInfo.Name)}" Value="{x:Static profiles:ProfileName.PuTTY}" />
                                                            <Condition Binding="{Binding Data.PuTTY_Enabled, Source={StaticResource BindingProxy}}" Value="True" />
                                                            <Condition Binding="{Binding Data.PuTTY_OverrideLogPath, Source={StaticResource BindingProxy}}" Value="True" />
                                                            <Condition Binding="{Binding ElementName=TextBoxPuTTYLogPath, Path=(Validation.HasError)}" Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <MultiDataTrigger.Setters>
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </MultiDataTrigger.Setters>
                                                    </MultiDataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding (profiles:ProfileViewInfo.Name)}" Value="{x:Static profiles:ProfileName.PuTTY}" />
                                                            <Condition Binding="{Binding Data.PuTTY_Enabled, Source={StaticResource BindingProxy}}" Value="True" />
                                                            <Condition Binding="{Binding Data.PuTTY_OverrideLogFileName, Source={StaticResource BindingProxy}}" Value="True" />
                                                            <Condition Binding="{Binding ElementName=TextBoxPuTTYLogFileName, Path=(Validation.HasError)}" Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <MultiDataTrigger.Setters>
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </MultiDataTrigger.Setters>
                                                    </MultiDataTrigger>
                                                    <!--  AWS Session Manager  -->
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding (profiles:ProfileViewInfo.Name)}" Value="{x:Static profiles:ProfileName.AWSSessionManager}" />
                                                            <Condition Binding="{Binding Data.AWSSessionManager_Enabled, Source={StaticResource BindingProxy}}" Value="True" />
                                                            <Condition Binding="{Binding ElementName=TextBoxAwsSessionManagerInstanceId, Path=(Validation.HasError)}" Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <MultiDataTrigger.Setters>
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </MultiDataTrigger.Setters>
                                                    </MultiDataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding (profiles:ProfileViewInfo.Name)}" Value="{x:Static profiles:ProfileName.AWSSessionManager}" />
                                                            <Condition Binding="{Binding Data.AWSSessionManager_Enabled, Source={StaticResource BindingProxy}}" Value="True" />
                                                            <Condition Binding="{Binding Data.AWSSessionManager_OverrideProfile, Source={StaticResource BindingProxy}}" Value="True" />
                                                            <Condition Binding="{Binding ElementName=TextBoxAwsSessionManagerProfile, Path=(Validation.HasError)}" Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <MultiDataTrigger.Setters>
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </MultiDataTrigger.Setters>
                                                    </MultiDataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding (profiles:ProfileViewInfo.Name)}" Value="{x:Static profiles:ProfileName.AWSSessionManager}" />
                                                            <Condition Binding="{Binding Data.AWSSessionManager_Enabled, Source={StaticResource BindingProxy}}" Value="True" />
                                                            <Condition Binding="{Binding Data.AWSSessionManager_OverrideRegion, Source={StaticResource BindingProxy}}" Value="True" />
                                                            <Condition Binding="{Binding ElementName=TextBoxAwsSessionManagerRegion, Path=(Validation.HasError)}" Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <MultiDataTrigger.Setters>
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </MultiDataTrigger.Setters>
                                                    </MultiDataTrigger>
                                                    <!--  TigerVNC  -->
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding (profiles:ProfileViewInfo.Name)}" Value="{x:Static profiles:ProfileName.TigerVNC}" />
                                                            <Condition Binding="{Binding Data.TigerVNC_Enabled, Source={StaticResource BindingProxy}}" Value="True" />
                                                            <Condition Binding="{Binding Data.TigerVNC_InheritHost, Source={StaticResource BindingProxy}}" Value="False" />
                                                            <Condition Binding="{Binding ElementName=TextBoxTigerVncHost, Path=(Validation.HasError)}" Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <MultiDataTrigger.Setters>
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </MultiDataTrigger.Setters>
                                                    </MultiDataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding (profiles:ProfileViewInfo.Name)}" Value="{x:Static profiles:ProfileName.TigerVNC}" />
                                                            <Condition Binding="{Binding Data.TigerVNC_Enabled, Source={StaticResource BindingProxy}}" Value="True" />
                                                            <Condition Binding="{Binding Data.TigerVNC_OverridePort, Source={StaticResource BindingProxy}}" Value="True" />
                                                            <Condition Binding="{Binding ElementName=TextBoxTigerVncPort, Path=(Validation.HasError)}" Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <MultiDataTrigger.Setters>
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </MultiDataTrigger.Setters>
                                                    </MultiDataTrigger>
                                                    <!--  WebConsole  -->
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding (profiles:ProfileViewInfo.Name)}" Value="{x:Static profiles:ProfileName.WebConsole}" />
                                                            <Condition Binding="{Binding Data.WebConsole_Enabled, Source={StaticResource BindingProxy}}" Value="True" />
                                                            <Condition Binding="{Binding ElementName=TextBoxWebConsoleUrl, Path=(Validation.HasError)}" Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <MultiDataTrigger.Setters>
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </MultiDataTrigger.Setters>
                                                    </MultiDataTrigger>
                                                    <!--  SNMP  -->
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding (profiles:ProfileViewInfo.Name)}" Value="{x:Static profiles:ProfileName.SNMP}" />
                                                            <Condition Binding="{Binding Data.SNMP_Enabled, Source={StaticResource BindingProxy}}" Value="True" />
                                                            <Condition Binding="{Binding Data.SNMP_InheritHost, Source={StaticResource BindingProxy}}" Value="False" />
                                                            <Condition Binding="{Binding ElementName=TextBoxSnmpHost, Path=(Validation.HasError)}" Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <MultiDataTrigger.Setters>
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </MultiDataTrigger.Setters>
                                                    </MultiDataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding (profiles:ProfileViewInfo.Name)}" Value="{x:Static profiles:ProfileName.SNMP}" />
                                                            <Condition Binding="{Binding Data.SNMP_Enabled, Source={StaticResource BindingProxy}}" Value="True" />
                                                            <Condition Binding="{Binding Data.SNMP_OverrideOIDAndMode, Source={StaticResource BindingProxy}}" Value="True" />
                                                            <Condition Binding="{Binding ElementName=TextBoxSnmpoid, Path=(Validation.HasError)}" Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <MultiDataTrigger.Setters>
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </MultiDataTrigger.Setters>
                                                    </MultiDataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding (profiles:ProfileViewInfo.Name)}" Value="{x:Static profiles:ProfileName.SNMP}" />
                                                            <Condition Binding="{Binding Data.SNMP_Enabled, Source={StaticResource BindingProxy}}" Value="True" />
                                                            <Condition Binding="{Binding Data.SNMP_OverrideVersionAndAuth, Source={StaticResource BindingProxy}}" Value="True" />
                                                            <Condition Binding="{Binding Data.SNMP_Version, Source={StaticResource BindingProxy}}" Value="V1" />
                                                            <Condition Binding="{Binding Data.SNMP_IsCommunityEmpty, Source={StaticResource BindingProxy}}" Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <MultiDataTrigger.Setters>
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </MultiDataTrigger.Setters>
                                                    </MultiDataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding (profiles:ProfileViewInfo.Name)}" Value="{x:Static profiles:ProfileName.SNMP}" />
                                                            <Condition Binding="{Binding Data.SNMP_Enabled, Source={StaticResource BindingProxy}}" Value="True" />
                                                            <Condition Binding="{Binding Data.SNMP_OverrideVersionAndAuth, Source={StaticResource BindingProxy}}" Value="True" />
                                                            <Condition Binding="{Binding Data.SNMP_Version, Source={StaticResource BindingProxy}}" Value="V2C" />
                                                            <Condition Binding="{Binding Data.SNMP_IsCommunityEmpty, Source={StaticResource BindingProxy}}" Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <MultiDataTrigger.Setters>
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </MultiDataTrigger.Setters>
                                                    </MultiDataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding (profiles:ProfileViewInfo.Name)}" Value="{x:Static profiles:ProfileName.SNMP}" />
                                                            <Condition Binding="{Binding Data.SNMP_Enabled, Source={StaticResource BindingProxy}}" Value="True" />
                                                            <Condition Binding="{Binding Data.SNMP_OverrideVersionAndAuth, Source={StaticResource BindingProxy}}" Value="True" />
                                                            <Condition Binding="{Binding Data.SNMP_Version, Source={StaticResource BindingProxy}}" Value="V3" />
                                                            <Condition Binding="{Binding ElementName=TextBoxSnmpUsername, Path=(Validation.HasError)}" Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <MultiDataTrigger.Setters>
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </MultiDataTrigger.Setters>
                                                    </MultiDataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding (profiles:ProfileViewInfo.Name)}" Value="{x:Static profiles:ProfileName.SNMP}" />
                                                            <Condition Binding="{Binding Data.SNMP_Enabled, Source={StaticResource BindingProxy}}" Value="True" />
                                                            <Condition Binding="{Binding Data.SNMP_OverrideVersionAndAuth, Source={StaticResource BindingProxy}}" Value="True" />
                                                            <Condition Binding="{Binding Data.SNMP_Version, Source={StaticResource BindingProxy}}" Value="V3" />
                                                            <Condition Binding="{Binding Data.SNMP_Security, Source={StaticResource BindingProxy}}" Value="AuthNoPriv" />
                                                            <Condition Binding="{Binding Data.SNMP_IsAuthEmpty, Source={StaticResource BindingProxy}}" Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <MultiDataTrigger.Setters>
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </MultiDataTrigger.Setters>
                                                    </MultiDataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding (profiles:ProfileViewInfo.Name)}" Value="{x:Static profiles:ProfileName.SNMP}" />
                                                            <Condition Binding="{Binding Data.SNMP_Enabled, Source={StaticResource BindingProxy}}" Value="True" />
                                                            <Condition Binding="{Binding Data.SNMP_OverrideVersionAndAuth, Source={StaticResource BindingProxy}}" Value="True" />
                                                            <Condition Binding="{Binding Data.SNMP_Version, Source={StaticResource BindingProxy}}" Value="V3" />
                                                            <Condition Binding="{Binding Data.SNMP_Security, Source={StaticResource BindingProxy}}" Value="AuthPriv" />
                                                            <Condition Binding="{Binding Data.SNMP_IsAuthEmpty, Source={StaticResource BindingProxy}}" Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <MultiDataTrigger.Setters>
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </MultiDataTrigger.Setters>
                                                    </MultiDataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding (profiles:ProfileViewInfo.Name)}" Value="{x:Static profiles:ProfileName.SNMP}" />
                                                            <Condition Binding="{Binding Data.SNMP_Enabled, Source={StaticResource BindingProxy}}" Value="True" />
                                                            <Condition Binding="{Binding Data.SNMP_OverrideVersionAndAuth, Source={StaticResource BindingProxy}}" Value="True" />
                                                            <Condition Binding="{Binding Data.SNMP_Version, Source={StaticResource BindingProxy}}" Value="V3" />
                                                            <Condition Binding="{Binding Data.SNMP_Security, Source={StaticResource BindingProxy}}" Value="AuthPriv" />
                                                            <Condition Binding="{Binding Data.SNMP_IsPrivEmpty, Source={StaticResource BindingProxy}}" Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <MultiDataTrigger.Setters>
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </MultiDataTrigger.Setters>
                                                    </MultiDataTrigger>
                                                    <!--  Wake on LAN  -->
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding (profiles:ProfileViewInfo.Name)}" Value="{x:Static profiles:ProfileName.WakeOnLAN}" />
                                                            <Condition Binding="{Binding Data.WakeOnLAN_Enabled, Source={StaticResource BindingProxy}}" Value="True" />
                                                            <Condition Binding="{Binding ElementName=TextBoxWakeOnLanMacAddress, Path=(Validation.HasError)}" Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <MultiDataTrigger.Setters>
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </MultiDataTrigger.Setters>
                                                    </MultiDataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding Data.WakeOnLAN_Enabled, Source={StaticResource BindingProxy}}" Value="True" />
                                                            <Condition Binding="{Binding (profiles:ProfileViewInfo.Name)}" Value="{x:Static profiles:ProfileName.WakeOnLAN}" />
                                                            <Condition Binding="{Binding ElementName=TextBoxWakeOnLanBroadcast, Path=(Validation.HasError)}" Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <MultiDataTrigger.Setters>
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </MultiDataTrigger.Setters>
                                                    </MultiDataTrigger>
                                                    <!--  Whois  -->
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding (profiles:ProfileViewInfo.Name)}" Value="{x:Static profiles:ProfileName.Whois}" />
                                                            <Condition Binding="{Binding Data.Whois_Enabled, Source={StaticResource BindingProxy}}" Value="True" />
                                                            <Condition Binding="{Binding Data.Whois_InheritHost, Source={StaticResource BindingProxy}}" Value="False" />
                                                            <Condition Binding="{Binding ElementName=TextBoxWhoisDomain, Path=(Validation.HasError)}" Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <MultiDataTrigger.Setters>
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </MultiDataTrigger.Setters>
                                                    </MultiDataTrigger>
                                                    <!--  IP Geolocation  -->
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding (profiles:ProfileViewInfo.Name)}" Value="{x:Static profiles:ProfileName.IPGeolocation}" />
                                                            <Condition Binding="{Binding Data.IPGeolocation_Enabled, Source={StaticResource BindingProxy}}" Value="True" />
                                                            <Condition Binding="{Binding Data.IPGeolocation_InheritHost, Source={StaticResource BindingProxy}}" Value="False" />
                                                            <Condition Binding="{Binding ElementName=TextBoxIPGeolocationHost, Path=(Validation.HasError)}" Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <MultiDataTrigger.Setters>
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </MultiDataTrigger.Setters>
                                                    </MultiDataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Rectangle.Style>
                                    </Rectangle>
                                    <CheckBox Grid.Column="5">
                                        <CheckBox.Style>
                                            <Style
                                                BasedOn="{StaticResource DefaultCheckBox}"
                                                TargetType="{x:Type CheckBox}">
                                                <Style.Triggers>
                                                    <DataTrigger
                                                        Binding="{Binding (profiles:ProfileViewInfo.Name)}"
                                                        Value="{x:Static profiles:ProfileName.General}">
                                                        <Setter Property="Visibility" Value="Hidden" />
                                                    </DataTrigger>
                                                    <DataTrigger
                                                        Binding="{Binding (profiles:ProfileViewInfo.Name)}"
                                                        Value="{x:Static profiles:ProfileName.NetworkInterface}">
                                                        <Setter Property="IsChecked" Value="{Binding DataContext.NetworkInterface_Enabled, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" />
                                                    </DataTrigger>
                                                    <DataTrigger
                                                        Binding="{Binding (profiles:ProfileViewInfo.Name)}"
                                                        Value="{x:Static profiles:ProfileName.IPScanner}">
                                                        <Setter Property="IsChecked" Value="{Binding DataContext.IPScanner_Enabled, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" />
                                                    </DataTrigger>
                                                    <DataTrigger
                                                        Binding="{Binding (profiles:ProfileViewInfo.Name)}"
                                                        Value="{x:Static profiles:ProfileName.PortScanner}">
                                                        <Setter Property="IsChecked" Value="{Binding DataContext.PortScanner_Enabled, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" />
                                                    </DataTrigger>
                                                    <DataTrigger
                                                        Binding="{Binding (profiles:ProfileViewInfo.Name)}"
                                                        Value="{x:Static profiles:ProfileName.PingMonitor}">
                                                        <Setter Property="IsChecked" Value="{Binding DataContext.PingMonitor_Enabled, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" />
                                                    </DataTrigger>
                                                    <DataTrigger
                                                        Binding="{Binding (profiles:ProfileViewInfo.Name)}"
                                                        Value="{x:Static profiles:ProfileName.Traceroute}">
                                                        <Setter Property="IsChecked" Value="{Binding DataContext.Traceroute_Enabled, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" />
                                                    </DataTrigger>
                                                    <DataTrigger
                                                        Binding="{Binding (profiles:ProfileViewInfo.Name)}"
                                                        Value="{x:Static profiles:ProfileName.DNSLookup}">
                                                        <Setter Property="IsChecked" Value="{Binding DataContext.DNSLookup_Enabled, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" />
                                                    </DataTrigger>
                                                    <DataTrigger
                                                        Binding="{Binding (profiles:ProfileViewInfo.Name)}"
                                                        Value="{x:Static profiles:ProfileName.RemoteDesktop}">
                                                        <Setter Property="IsChecked" Value="{Binding DataContext.RemoteDesktop_Enabled, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" />
                                                    </DataTrigger>
                                                    <DataTrigger
                                                        Binding="{Binding (profiles:ProfileViewInfo.Name)}"
                                                        Value="{x:Static profiles:ProfileName.PowerShell}">
                                                        <Setter Property="IsChecked" Value="{Binding DataContext.PowerShell_Enabled, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" />
                                                    </DataTrigger>
                                                    <DataTrigger
                                                        Binding="{Binding (profiles:ProfileViewInfo.Name)}"
                                                        Value="{x:Static profiles:ProfileName.PuTTY}">
                                                        <Setter Property="IsChecked" Value="{Binding DataContext.PuTTY_Enabled, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" />
                                                    </DataTrigger>
                                                    <DataTrigger
                                                        Binding="{Binding (profiles:ProfileViewInfo.Name)}"
                                                        Value="{x:Static profiles:ProfileName.AWSSessionManager}">
                                                        <Setter Property="IsChecked" Value="{Binding DataContext.AWSSessionManager_Enabled, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" />
                                                    </DataTrigger>
                                                    <DataTrigger
                                                        Binding="{Binding (profiles:ProfileViewInfo.Name)}"
                                                        Value="{x:Static profiles:ProfileName.TigerVNC}">
                                                        <Setter Property="IsChecked" Value="{Binding DataContext.TigerVNC_Enabled, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" />
                                                    </DataTrigger>
                                                    <DataTrigger
                                                        Binding="{Binding (profiles:ProfileViewInfo.Name)}"
                                                        Value="{x:Static profiles:ProfileName.WebConsole}">
                                                        <Setter Property="IsChecked" Value="{Binding DataContext.WebConsole_Enabled, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" />
                                                    </DataTrigger>
                                                    <DataTrigger
                                                        Binding="{Binding (profiles:ProfileViewInfo.Name)}"
                                                        Value="{x:Static profiles:ProfileName.SNMP}">
                                                        <Setter Property="IsChecked" Value="{Binding DataContext.SNMP_Enabled, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" />
                                                    </DataTrigger>
                                                    <DataTrigger
                                                        Binding="{Binding (profiles:ProfileViewInfo.Name)}"
                                                        Value="{x:Static profiles:ProfileName.WakeOnLAN}">
                                                        <Setter Property="IsChecked" Value="{Binding DataContext.WakeOnLAN_Enabled, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" />
                                                    </DataTrigger>
                                                    <DataTrigger
                                                        Binding="{Binding (profiles:ProfileViewInfo.Name)}"
                                                        Value="{x:Static profiles:ProfileName.Whois}">
                                                        <Setter Property="IsChecked" Value="{Binding DataContext.Whois_Enabled, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" />
                                                    </DataTrigger>
                                                    <DataTrigger
                                                        Binding="{Binding (profiles:ProfileViewInfo.Name)}"
                                                        Value="{x:Static profiles:ProfileName.IPGeolocation}">
                                                        <Setter Property="IsChecked" Value="{Binding DataContext.IPGeolocation_Enabled, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </CheckBox.Style>
                                    </CheckBox>
                                </Grid>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                        <ListBox.ItemContainerStyle>
                            <Style TargetType="{x:Type ListBoxItem}">
                                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                            <Border
                                                Background="Transparent"
                                                BorderThickness="0">
                                                <Grid MinHeight="30">
                                                    <ContentPresenter />
                                                </Grid>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ListBox.ItemContainerStyle>
                        <!--  BUGFIX This has to be set, to enable mouse wheel scrolling  -->
                        <ListBox.Template>
                            <ControlTemplate TargetType="ItemsControl">
                                <Border>
                                    <ItemsPresenter />
                                </Border>
                            </ControlTemplate>
                        </ListBox.Template>
                        <ListBox.ItemsPanel>
                            <ItemsPanelTemplate>
                                <VirtualizingStackPanel />
                            </ItemsPanelTemplate>
                        </ListBox.ItemsPanel>
                        <!--  /BUGFIX  -->
                    </ListBox>
                </ScrollViewer>
            </Border>
            <TabControl
                Grid.Column="1"
                Margin="10"
                SelectedIndex="{Binding ElementName=ListBoxViews, Path=SelectedIndex}">
                <TabControl.Resources>
                    <Style
                        BasedOn="{StaticResource ProfileTabItem}"
                        TargetType="{x:Type TabItem}" />
                </TabControl.Resources>
                <TabItem Header="{x:Static localization:Strings.General}">
                    <ScrollViewer HorizontalScrollBarVisibility="Disabled">
                        <StackPanel>
                            <Grid>
                                <Grid.Resources>
                                    <Style
                                        BasedOn="{StaticResource CenterTextBlock}"
                                        TargetType="{x:Type TextBlock}" />
                                    <Style
                                        BasedOn="{StaticResource DefaultTextBox}"
                                        TargetType="{x:Type TextBox}" />
                                </Grid.Resources>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="10" />
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="34" />
                                </Grid.ColumnDefinitions>
                                <TextBlock
                                    Grid.Row="0"
                                    Grid.Column="0"
                                    Text="{x:Static localization:Strings.Name}" />
                                <TextBox
                                    x:Name="TextBoxName"
                                    Grid.Row="0"
                                    Grid.Column="2"
                                    mah:TextBoxHelper.Watermark="{x:Static localization:StaticStrings.ExampleRemoteDesktopProfileName}"
                                    GotFocus="TextBoxName_OnGotFocus"
                                    TextChanged="TextBoxName_OnTextChanged">
                                    <TextBox.Text>
                                        <Binding
                                            Mode="TwoWay"
                                            Path="Name"
                                            UpdateSourceTrigger="PropertyChanged">
                                            <Binding.ValidationRules>
                                                <validators:EmptyValidator ValidatesOnTargetUpdated="True" />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                                <TextBlock
                                    Grid.Row="2"
                                    Grid.Column="0"
                                    Text="{x:Static localization:Strings.Host}" />
                                <TextBox
                                    x:Name="TextBoxHost"
                                    Grid.Row="2"
                                    Grid.Column="2"
                                    mah:TextBoxHelper.Watermark="{x:Static localization:StaticStrings.ExampleHostnameOrIPAddress}">
                                    <TextBox.Text>
                                        <Binding
                                            Mode="TwoWay"
                                            Path="Host"
                                            UpdateSourceTrigger="PropertyChanged">
                                            <Binding.ValidationRules>
                                                <validators:EmptyValidator ValidatesOnTargetUpdated="True" />
                                                <validators:IPAddressOrHostnameValidator ValidatesOnTargetUpdated="True" />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                                <Button
                                    Grid.Row="2"
                                    Grid.Column="3"
                                    Margin="10,0,0,0"
                                    Command="{Binding ResolveHostCommand}"
                                    IsEnabled="{Binding Host, Converter={StaticResource StringIsNotNullOrEmptyOrIPv4AddressToBooleanConverter}}"
                                    ToolTip="{x:Static localization:Strings.ResolveIPAddressForThisHost}">
                                    <Button.Style>
                                        <Style
                                            BasedOn="{StaticResource CleanButton}"
                                            TargetType="{x:Type Button}">
                                            <Style.Triggers>
                                                <DataTrigger
                                                    Binding="{Binding IsResolveHostnameRunning}"
                                                    Value="True">
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                </DataTrigger>
                                                <DataTrigger
                                                    Binding="{Binding ShowCouldNotResolveHostnameWarning}"
                                                    Value="True">
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                    <Rectangle
                                        Width="24"
                                        Height="24">
                                        <Rectangle.OpacityMask>
                                            <VisualBrush
                                                Stretch="Uniform"
                                                Visual="{iconPacks:Material Kind=SearchWeb}" />
                                        </Rectangle.OpacityMask>
                                        <Rectangle.Style>
                                            <Style TargetType="{x:Type Rectangle}">
                                                <Setter Property="Fill" Value="{DynamicResource MahApps.Brushes.Gray3}" />
                                                <Style.Triggers>
                                                    <DataTrigger
                                                        Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Button}}, Path=IsMouseOver}"
                                                        Value="True">
                                                        <Setter Property="Fill" Value="{DynamicResource MahApps.Brushes.Gray5}" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Rectangle.Style>
                                    </Rectangle>
                                </Button>
                                <mah:ProgressRing
                                    Grid.Row="2"
                                    Grid.Column="3"
                                    Width="24"
                                    Height="24"
                                    Margin="10,0,0,0"
                                    Visibility="{Binding IsResolveHostnameRunning, Converter={StaticResource BooleanToVisibilityCollapsedConverter}}" />
                                <Rectangle
                                    Grid.Row="2"
                                    Grid.Column="3"
                                    Width="24"
                                    Height="24"
                                    Margin="10,0,0,0"
                                    Style="{StaticResource WarnImageRectangle}"
                                    ToolTip="{x:Static localization:Strings.WarningMessage_CouldNotResolveIPAddressForHostname}"
                                    Visibility="{Binding ShowCouldNotResolveHostnameWarning, Converter={StaticResource BooleanToVisibilityCollapsedConverter}}">
                                    <Rectangle.Resources>
                                        <Style
                                            BasedOn="{StaticResource WarnToolTip}"
                                            TargetType="{x:Type ToolTip}" />
                                    </Rectangle.Resources>
                                </Rectangle>
                                <TextBlock
                                    Grid.Row="4"
                                    Grid.Column="0"
                                    Text="{x:Static localization:Strings.Group}" />
                                <ComboBox
                                    x:Name="ComboBoxGroup"
                                    Grid.Row="4"
                                    Grid.Column="2"
                                    mah:TextBoxHelper.Watermark="{x:Static localization:StaticStrings.ExampleGroupServers}"
                                    ItemsSource="{Binding Groups}"
                                    Style="{StaticResource EditableComboBox}">
                                    <ComboBox.Text>
                                        <Binding
                                            Mode="TwoWay"
                                            Path="Group"
                                            UpdateSourceTrigger="PropertyChanged">
                                            <Binding.ValidationRules>
                                                <validators:EmptyValidator ValidatesOnTargetUpdated="True" />
                                                <validators:GroupNameValidator ValidatesOnTargetUpdated="True" />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </ComboBox.Text>
                                </ComboBox>
                                <TextBlock
                                    Grid.Row="6"
                                    Grid.Column="0"
                                    Text="{x:Static localization:Strings.Tags}" />
                                <TextBox
                                    Grid.Row="6"
                                    Grid.Column="2"
                                    mah:TextBoxHelper.Watermark="{x:Static localization:StaticStrings.ExampleTags}"
                                    Text="{Binding Tags, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                <Rectangle
                                    Grid.Row="6"
                                    Grid.Column="3"
                                    Width="24"
                                    Height="24"
                                    Margin="10,0,0,0"
                                    Style="{StaticResource HelpImageRectangle}"
                                    ToolTip="{x:Static localization:Strings.HelpMessage_Tags}">
                                    <Rectangle.Resources>
                                        <Style
                                            BasedOn="{StaticResource HelpToolTip}"
                                            TargetType="{x:Type ToolTip}" />
                                    </Rectangle.Resources>
                                </Rectangle>
                            </Grid>
                        </StackPanel>
                    </ScrollViewer>
                </TabItem>
                <TabItem Header="{x:Static localization:Strings.NetworkInterface}">
                    <ScrollViewer HorizontalScrollBarVisibility="Disabled">
                        <StackPanel IsEnabled="{Binding NetworkInterface_Enabled}">
                            <RadioButton
                                x:Name="RadioButtonEnableDynamicIPAddress"
                                Margin="0,0,0,10"
                                Content="{x:Static localization:Strings.ObtainAnIPAddressAutomatically}"
                                GroupName="NetworkInterface_IPAddressConfig"
                                IsChecked="{Binding NetworkInterface_EnableDynamicIPAddress}" />
                            <RadioButton
                                x:Name="RadioButtonEnableStaticIPAddress"
                                Margin="0,0,0,10"
                                Content="{x:Static localization:Strings.UseTheFollowingIPAddress}"
                                GroupName="NetworkInterface_IPAddressConfig"
                                IsChecked="{Binding NetworkInterface_EnableStaticIPAddress}" />
                            <Grid
                                Margin="0,0,0,10"
                                IsEnabled="{Binding NetworkInterface_EnableStaticIPAddress}">
                                <Grid.Resources>
                                    <Style
                                        BasedOn="{StaticResource CenterTextBlock}"
                                        TargetType="{x:Type TextBlock}" />
                                    <Style
                                        BasedOn="{StaticResource DefaultTextBox}"
                                        TargetType="{x:Type TextBox}" />
                                </Grid.Resources>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="10" />
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="34" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <TextBlock
                                    Grid.Row="0"
                                    Grid.Column="0"
                                    Margin="24,0,0,0"
                                    VerticalAlignment="Center"
                                    Style="{StaticResource DisabledTextBlock}"
                                    Text="{x:Static localization:Strings.IPv4Address}" />
                                <TextBox
                                    x:Name="TextBoxNetworkInterfaceIPAddress"
                                    Grid.Row="0"
                                    Grid.Column="2"
                                    mah:TextBoxHelper.Watermark="{x:Static localization:StaticStrings.ExampleIPv4Address}">
                                    <TextBox.Text>
                                        <Binding
                                            Mode="TwoWay"
                                            Path="NetworkInterface_IPAddress"
                                            UpdateSourceTrigger="PropertyChanged">
                                            <Binding.ValidationRules>
                                                <validators:EmptyValidator ValidatesOnTargetUpdated="True" />
                                                <validators:IPv4AddressValidator ValidatesOnTargetUpdated="True" />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                                <TextBlock
                                    Grid.Row="2"
                                    Grid.Column="0"
                                    Margin="24,0,0,0"
                                    VerticalAlignment="Center"
                                    Style="{StaticResource DisabledTextBlock}"
                                    Text="{x:Static localization:Strings.SubnetMask}" />
                                <ComboBox
                                    x:Name="ComboBoxNetworkInterfaceSubnetmask"
                                    Grid.Row="2"
                                    Grid.Column="2"
                                    mah:TextBoxHelper.Watermark="{x:Static localization:StaticStrings.ExampleIPv4SubnetmaskIPv4CIDR}"
                                    ItemsSource="{x:Static network:Subnetmask.List}"
                                    Style="{StaticResource EditableComboBox}">
                                    <ComboBox.Text>
                                        <Binding
                                            Mode="TwoWay"
                                            Path="NetworkInterface_Subnetmask"
                                            UpdateSourceTrigger="PropertyChanged">
                                            <Binding.ValidationRules>
                                                <validators:EmptyValidator ValidatesOnTargetUpdated="True" />
                                                <validators:IPv4SubnetmaskOrCIDRValidator ValidatesOnTargetUpdated="True" />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </ComboBox.Text>
                                </ComboBox>
                                <TextBlock
                                    Grid.Row="4"
                                    Grid.Column="0"
                                    Margin="24,0,0,0"
                                    VerticalAlignment="Center"
                                    Style="{StaticResource DisabledTextBlock}"
                                    Text="{x:Static localization:Strings.DefaultGateway}" />
                                <TextBox
                                    x:Name="TextBoxNetworkInterfaceGateway"
                                    Grid.Row="4"
                                    Grid.Column="2"
                                    mah:TextBoxHelper.Watermark="{x:Static localization:StaticStrings.ExampleIPv4Gateway}">
                                    <TextBox.Text>
                                        <Binding
                                            Mode="TwoWay"
                                            Path="NetworkInterface_Gateway"
                                            UpdateSourceTrigger="PropertyChanged">
                                            <Binding.ValidationRules>
                                                <validators:EmptyOrIPv4AddressValidator ValidatesOnTargetUpdated="True" />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                            </Grid>
                            <RadioButton
                                x:Name="RadioButtonEnableDynamicDNS"
                                Margin="0,0,0,10"
                                Content="{x:Static localization:Strings.ObtainDNSServerAddressAutomatically}"
                                GroupName="NetworkInterface_DNSServerConfig"
                                IsChecked="{Binding NetworkInterface_EnableDynamicDNS}"
                                IsEnabled="{Binding NetworkInterface_EnableDynamicIPAddress}" />
                            <RadioButton
                                x:Name="RadioButtonEnableStaticDNS"
                                Margin="0,0,0,10"
                                Content="{x:Static localization:Strings.UseTheFollowingDNSServerAddresses}"
                                GroupName="NetworkInterface_DNSServerConfig"
                                IsChecked="{Binding NetworkInterface_EnableStaticDNS}" />
                            <Grid IsEnabled="{Binding NetworkInterface_EnableStaticDNS}">
                                <Grid.Resources>
                                    <Style
                                        BasedOn="{StaticResource CenterTextBlock}"
                                        TargetType="{x:Type TextBlock}" />
                                    <Style
                                        BasedOn="{StaticResource DefaultTextBox}"
                                        TargetType="{x:Type TextBox}" />
                                </Grid.Resources>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="10" />
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="34" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <TextBlock
                                    Grid.Row="0"
                                    Grid.Column="0"
                                    Margin="24,0,0,0"
                                    VerticalAlignment="Center"
                                    Style="{StaticResource DisabledTextBlock}"
                                    Text="{x:Static localization:Strings.PrimaryDNSServer}" />
                                <TextBox
                                    x:Name="TextBoxNetworkInterfacePrimaryDNSServer"
                                    Grid.Row="0"
                                    Grid.Column="2"
                                    mah:TextBoxHelper.Watermark="{x:Static localization:StaticStrings.ExampleIPv4Gateway}">
                                    <TextBox.Text>
                                        <Binding
                                            Mode="TwoWay"
                                            Path="NetworkInterface_PrimaryDNSServer"
                                            UpdateSourceTrigger="PropertyChanged">
                                            <Binding.ValidationRules>
                                                <validators:EmptyOrIPv4AddressValidator ValidatesOnTargetUpdated="True" />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                                <TextBlock
                                    Grid.Row="2"
                                    Grid.Column="0"
                                    Margin="24,0,0,0"
                                    VerticalAlignment="Center"
                                    Style="{StaticResource DisabledTextBlock}"
                                    Text="{x:Static localization:Strings.SecondaryDNSServer}" />
                                <TextBox
                                    x:Name="TextBoxNetworkInterfaceSecondaryDNSServer"
                                    Grid.Row="2"
                                    Grid.Column="2"
                                    mah:TextBoxHelper.Watermark="{x:Static localization:StaticStrings.ExampleIPv4DNSServer}">
                                    <TextBox.Text>
                                        <Binding
                                            Mode="TwoWay"
                                            Path="NetworkInterface_SecondaryDNSServer"
                                            UpdateSourceTrigger="PropertyChanged">
                                            <Binding.ValidationRules>
                                                <validators:EmptyOrIPv4AddressValidator ValidatesOnTargetUpdated="True" />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                            </Grid>
                        </StackPanel>
                    </ScrollViewer>
                </TabItem>
                <TabItem Header="{x:Static localization:Strings.IPScanner}">
                    <ScrollViewer HorizontalScrollBarVisibility="Disabled">
                        <StackPanel IsEnabled="{Binding IPScanner_Enabled}">
                            <Grid>
                                <Grid.Resources>
                                    <Style
                                        BasedOn="{StaticResource CenterTextBlock}"
                                        TargetType="{x:Type TextBlock}" />
                                    <Style
                                        BasedOn="{StaticResource DefaultTextBox}"
                                        TargetType="{x:Type TextBox}" />
                                </Grid.Resources>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="10" />
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="34" />
                                </Grid.ColumnDefinitions>
                                <TextBlock
                                    Grid.Row="0"
                                    Grid.Column="0"
                                    Text="{x:Static localization:Strings.InheritHostFromGeneral}" />
                                <mah:ToggleSwitch
                                    Grid.Row="0"
                                    Grid.Column="2"
                                    IsOn="{Binding IPScanner_InheritHost}"
                                    OffContent=""
                                    OnContent="" />
                                <TextBlock
                                    Grid.Row="2"
                                    Grid.Column="0"
                                    Text="{x:Static localization:Strings.Host}" />
                                <TextBox
                                    x:Name="TextBoxIPScannerIPRange"
                                    Grid.Row="2"
                                    Grid.Column="2"
                                    mah:TextBoxHelper.Watermark="{x:Static localization:StaticStrings.ExampleHostRange}"
                                    IsEnabled="{Binding IPScanner_InheritHost, Converter={StaticResource BooleanReverseConverter}}">
                                    <TextBox.Style>
                                        <Style
                                            BasedOn="{StaticResource DefaultTextBox}"
                                            TargetType="{x:Type TextBox}">
                                            <Style.Triggers>
                                                <DataTrigger
                                                    Binding="{Binding IPScanner_InheritHost}"
                                                    Value="True">
                                                    <Setter Property="TextBox.Text">
                                                        <Setter.Value>
                                                            <Binding
                                                                Mode="TwoWay"
                                                                Path="Host"
                                                                UpdateSourceTrigger="PropertyChanged" />
                                                        </Setter.Value>
                                                    </Setter>
                                                </DataTrigger>
                                                <DataTrigger
                                                    Binding="{Binding IPScanner_InheritHost}"
                                                    Value="False">
                                                    <Setter Property="TextBox.Text">
                                                        <Setter.Value>
                                                            <Binding
                                                                Mode="TwoWay"
                                                                Path="IPScanner_HostOrIPRange"
                                                                UpdateSourceTrigger="PropertyChanged">
                                                                <Binding.ValidationRules>
                                                                    <validators:EmptyValidator ValidatesOnTargetUpdated="True" />
                                                                    <validators:MultipleHostsRangeValidator ValidatesOnTargetUpdated="True" />
                                                                </Binding.ValidationRules>
                                                            </Binding>
                                                        </Setter.Value>
                                                    </Setter>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBox.Style>
                                </TextBox>
                            </Grid>
                        </StackPanel>
                    </ScrollViewer>
                </TabItem>
                <TabItem Header="{x:Static localization:Strings.PortScanner}">
                    <ScrollViewer HorizontalScrollBarVisibility="Disabled">
                        <StackPanel IsEnabled="{Binding PortScanner_Enabled}">
                            <Grid>
                                <Grid.Resources>
                                    <Style
                                        BasedOn="{StaticResource CenterTextBlock}"
                                        TargetType="{x:Type TextBlock}" />
                                    <Style
                                        BasedOn="{StaticResource DefaultTextBox}"
                                        TargetType="{x:Type TextBox}" />
                                </Grid.Resources>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="10" />
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="34" />
                                </Grid.ColumnDefinitions>
                                <TextBlock
                                    Grid.Row="0"
                                    Grid.Column="0"
                                    Text="{x:Static localization:Strings.InheritHostFromGeneral}" />
                                <mah:ToggleSwitch
                                    Grid.Row="0"
                                    Grid.Column="2"
                                    IsOn="{Binding PortScanner_InheritHost}"
                                    OffContent=""
                                    OnContent="" />
                                <TextBlock
                                    Grid.Row="2"
                                    Grid.Column="0"
                                    Text="{x:Static localization:Strings.Host}" />
                                <TextBox
                                    x:Name="TextBoxPortScannerHost"
                                    Grid.Row="2"
                                    Grid.Column="2"
                                    mah:TextBoxHelper.Watermark="{x:Static localization:StaticStrings.ExampleHostRange}"
                                    IsEnabled="{Binding PortScanner_InheritHost, Converter={StaticResource BooleanReverseConverter}}">
                                    <TextBox.Style>
                                        <Style
                                            BasedOn="{StaticResource DefaultTextBox}"
                                            TargetType="{x:Type TextBox}">
                                            <Style.Triggers>
                                                <DataTrigger
                                                    Binding="{Binding PortScanner_InheritHost}"
                                                    Value="True">
                                                    <Setter Property="TextBox.Text">
                                                        <Setter.Value>
                                                            <Binding
                                                                Mode="TwoWay"
                                                                Path="Host"
                                                                UpdateSourceTrigger="PropertyChanged" />
                                                        </Setter.Value>
                                                    </Setter>
                                                </DataTrigger>
                                                <DataTrigger
                                                    Binding="{Binding PortScanner_InheritHost}"
                                                    Value="False">
                                                    <Setter Property="TextBox.Text">
                                                        <Setter.Value>
                                                            <Binding
                                                                Mode="TwoWay"
                                                                Path="PortScanner_Host"
                                                                UpdateSourceTrigger="PropertyChanged">
                                                                <Binding.ValidationRules>
                                                                    <validators:EmptyValidator ValidatesOnTargetUpdated="True" />
                                                                    <validators:MultipleHostsRangeValidator ValidatesOnTargetUpdated="True" />
                                                                </Binding.ValidationRules>
                                                            </Binding>
                                                        </Setter.Value>
                                                    </Setter>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBox.Style>
                                </TextBox>
                                <TextBlock
                                    Grid.Row="4"
                                    Grid.Column="0"
                                    Text="{x:Static localization:Strings.Ports}" />
                                <TextBox
                                    x:Name="TextBoxPortScannerPorts"
                                    Grid.Row="4"
                                    Grid.Column="2"
                                    mah:TextBoxHelper.Watermark="{x:Static localization:StaticStrings.ExamplePortScanRange}">
                                    <TextBox.Text>
                                        <Binding
                                            Mode="TwoWay"
                                            Path="PortScanner_Ports"
                                            UpdateSourceTrigger="PropertyChanged">
                                            <Binding.ValidationRules>
                                                <validators:EmptyOrPortRangeValidator ValidatesOnTargetUpdated="True" />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                            </Grid>
                        </StackPanel>
                    </ScrollViewer>
                </TabItem>
                <TabItem Header="{x:Static localization:Strings.PingMonitor}">
                    <ScrollViewer HorizontalScrollBarVisibility="Disabled">
                        <StackPanel IsEnabled="{Binding PingMonitor_Enabled}">
                            <Grid>
                                <Grid.Resources>
                                    <Style
                                        BasedOn="{StaticResource CenterTextBlock}"
                                        TargetType="{x:Type TextBlock}" />
                                    <Style
                                        BasedOn="{StaticResource DefaultTextBox}"
                                        TargetType="{x:Type TextBox}" />
                                </Grid.Resources>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="10" />
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="34" />
                                </Grid.ColumnDefinitions>
                                <TextBlock
                                    Grid.Row="0"
                                    Grid.Column="0"
                                    Text="{x:Static localization:Strings.InheritHostFromGeneral}" />
                                <mah:ToggleSwitch
                                    Grid.Row="0"
                                    Grid.Column="2"
                                    IsOn="{Binding PingMonitor_InheritHost}"
                                    OffContent=""
                                    OnContent="" />
                                <TextBlock
                                    Grid.Row="2"
                                    Grid.Column="0"
                                    Text="{x:Static localization:Strings.Host}" />
                                <TextBox
                                    x:Name="TextBoxPingMonitorHost"
                                    Grid.Row="2"
                                    Grid.Column="2"
                                    mah:TextBoxHelper.Watermark="{x:Static localization:StaticStrings.ExampleHostRange}"
                                    IsEnabled="{Binding PingMonitor_InheritHost, Converter={StaticResource BooleanReverseConverter}}">
                                    <TextBox.Style>
                                        <Style
                                            BasedOn="{StaticResource DefaultTextBox}"
                                            TargetType="{x:Type TextBox}">
                                            <Style.Triggers>
                                                <DataTrigger
                                                    Binding="{Binding PingMonitor_InheritHost}"
                                                    Value="True">
                                                    <Setter Property="TextBox.Text">
                                                        <Setter.Value>
                                                            <Binding
                                                                Mode="TwoWay"
                                                                Path="Host"
                                                                UpdateSourceTrigger="PropertyChanged" />
                                                        </Setter.Value>
                                                    </Setter>
                                                </DataTrigger>
                                                <DataTrigger
                                                    Binding="{Binding PingMonitor_InheritHost}"
                                                    Value="False">
                                                    <Setter Property="TextBox.Text">
                                                        <Setter.Value>
                                                            <Binding
                                                                Mode="TwoWay"
                                                                Path="PingMonitor_Host"
                                                                UpdateSourceTrigger="PropertyChanged">
                                                                <Binding.ValidationRules>
                                                                    <validators:EmptyValidator ValidatesOnTargetUpdated="True" />
                                                                    <validators:MultipleHostsRangeValidator ValidatesOnTargetUpdated="True" />
                                                                </Binding.ValidationRules>
                                                            </Binding>
                                                        </Setter.Value>
                                                    </Setter>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBox.Style>
                                </TextBox>
                            </Grid>
                        </StackPanel>
                    </ScrollViewer>
                </TabItem>
                <TabItem Header="{x:Static localization:Strings.Traceroute}">
                    <ScrollViewer HorizontalScrollBarVisibility="Disabled">
                        <StackPanel IsEnabled="{Binding Traceroute_Enabled}">
                            <Grid>
                                <Grid.Resources>
                                    <Style
                                        BasedOn="{StaticResource CenterTextBlock}"
                                        TargetType="{x:Type TextBlock}" />
                                    <Style
                                        BasedOn="{StaticResource DefaultTextBox}"
                                        TargetType="{x:Type TextBox}" />
                                </Grid.Resources>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="10" />
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="34" />
                                </Grid.ColumnDefinitions>
                                <TextBlock
                                    Grid.Row="0"
                                    Grid.Column="0"
                                    Text="{x:Static localization:Strings.InheritHostFromGeneral}" />
                                <mah:ToggleSwitch
                                    Grid.Row="0"
                                    Grid.Column="2"
                                    IsOn="{Binding Traceroute_InheritHost}"
                                    OffContent=""
                                    OnContent="" />
                                <TextBlock
                                    Grid.Row="2"
                                    Grid.Column="0"
                                    Text="{x:Static localization:Strings.Host}" />
                                <TextBox
                                    x:Name="TextBoxTracerouteHost"
                                    Grid.Row="2"
                                    Grid.Column="2"
                                    mah:TextBoxHelper.Watermark="{x:Static localization:StaticStrings.ExampleHostnameOrIPAddress}"
                                    IsEnabled="{Binding Traceroute_InheritHost, Converter={StaticResource BooleanReverseConverter}}">
                                    <TextBox.Style>
                                        <Style
                                            BasedOn="{StaticResource DefaultTextBox}"
                                            TargetType="{x:Type TextBox}">
                                            <Style.Triggers>
                                                <DataTrigger
                                                    Binding="{Binding Traceroute_InheritHost}"
                                                    Value="True">
                                                    <Setter Property="TextBox.Text">
                                                        <Setter.Value>
                                                            <Binding
                                                                Mode="TwoWay"
                                                                Path="Host"
                                                                UpdateSourceTrigger="PropertyChanged" />
                                                        </Setter.Value>
                                                    </Setter>
                                                </DataTrigger>
                                                <DataTrigger
                                                    Binding="{Binding Traceroute_InheritHost}"
                                                    Value="False">
                                                    <Setter Property="TextBox.Text">
                                                        <Setter.Value>
                                                            <Binding
                                                                Mode="TwoWay"
                                                                Path="Traceroute_Host"
                                                                UpdateSourceTrigger="PropertyChanged">
                                                                <Binding.ValidationRules>
                                                                    <validators:EmptyValidator ValidatesOnTargetUpdated="True" />
                                                                    <validators:IPAddressOrHostnameValidator ValidatesOnTargetUpdated="True" />
                                                                </Binding.ValidationRules>
                                                            </Binding>
                                                        </Setter.Value>
                                                    </Setter>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBox.Style>
                                </TextBox>
                            </Grid>
                        </StackPanel>
                    </ScrollViewer>
                </TabItem>
                <TabItem Header="{x:Static localization:Strings.DNSLookup}">
                    <ScrollViewer HorizontalScrollBarVisibility="Disabled">
                        <StackPanel IsEnabled="{Binding DNSLookup_Enabled}">
                            <Grid>
                                <Grid.Resources>
                                    <Style
                                        BasedOn="{StaticResource CenterTextBlock}"
                                        TargetType="{x:Type TextBlock}" />
                                    <Style
                                        BasedOn="{StaticResource DefaultTextBox}"
                                        TargetType="{x:Type TextBox}" />
                                </Grid.Resources>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="10" />
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="34" />
                                </Grid.ColumnDefinitions>
                                <TextBlock
                                    Grid.Row="0"
                                    Grid.Column="0"
                                    Text="{x:Static localization:Strings.InheritHostFromGeneral}" />
                                <mah:ToggleSwitch
                                    Grid.Row="0"
                                    Grid.Column="2"
                                    IsOn="{Binding DNSLookup_InheritHost}"
                                    OffContent=""
                                    OnContent="" />
                                <TextBlock
                                    Grid.Row="2"
                                    Grid.Column="0"
                                    Text="{x:Static localization:Strings.Host}" />
                                <TextBox
                                    x:Name="TextBoxDNSLookupHost"
                                    Grid.Row="2"
                                    Grid.Column="2"
                                    mah:TextBoxHelper.Watermark="{x:Static localization:StaticStrings.ExampleHostnameAndOrIPAddress}"
                                    IsEnabled="{Binding DNSLookup_InheritHost, Converter={StaticResource BooleanReverseConverter}}">
                                    <TextBox.Style>
                                        <Style
                                            BasedOn="{StaticResource DefaultTextBox}"
                                            TargetType="{x:Type TextBox}">
                                            <Style.Triggers>
                                                <DataTrigger
                                                    Binding="{Binding DNSLookup_InheritHost}"
                                                    Value="True">
                                                    <Setter Property="TextBox.Text">
                                                        <Setter.Value>
                                                            <Binding
                                                                Mode="TwoWay"
                                                                Path="Host"
                                                                UpdateSourceTrigger="PropertyChanged" />
                                                        </Setter.Value>
                                                    </Setter>
                                                </DataTrigger>
                                                <DataTrigger
                                                    Binding="{Binding DNSLookup_InheritHost}"
                                                    Value="False">
                                                    <Setter Property="TextBox.Text">
                                                        <Setter.Value>
                                                            <Binding
                                                                Mode="TwoWay"
                                                                Path="DNSLookup_Host"
                                                                UpdateSourceTrigger="PropertyChanged">
                                                                <Binding.ValidationRules>
                                                                    <validators:EmptyValidator ValidatesOnTargetUpdated="True" />
                                                                </Binding.ValidationRules>
                                                            </Binding>
                                                        </Setter.Value>
                                                    </Setter>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBox.Style>
                                </TextBox>
                            </Grid>
                        </StackPanel>
                    </ScrollViewer>
                </TabItem>
                <TabItem Header="{x:Static localization:Strings.RemoteDesktop}">
                    <ScrollViewer HorizontalScrollBarVisibility="Disabled">
                        <StackPanel IsEnabled="{Binding RemoteDesktop_Enabled}">
                            <Grid>
                                <Grid.Resources>
                                    <Style
                                        BasedOn="{StaticResource CenterTextBlock}"
                                        TargetType="{x:Type TextBlock}" />
                                    <Style
                                        BasedOn="{StaticResource DefaultTextBox}"
                                        TargetType="{x:Type TextBox}" />
                                </Grid.Resources>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="10" />
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="34" />
                                </Grid.ColumnDefinitions>
                                <TextBlock
                                    Grid.Row="0"
                                    Grid.Column="0"
                                    Text="{x:Static localization:Strings.InheritHostFromGeneral}" />
                                <mah:ToggleSwitch
                                    Grid.Row="0"
                                    Grid.Column="2"
                                    IsOn="{Binding RemoteDesktop_InheritHost}"
                                    OffContent=""
                                    OnContent="" />
                                <TextBlock
                                    Grid.Row="2"
                                    Grid.Column="0"
                                    Text="{x:Static localization:Strings.Host}" />
                                <TextBox
                                    x:Name="TextBoxRemoteDesktopHost"
                                    Grid.Row="2"
                                    Grid.Column="2"
                                    mah:TextBoxHelper.Watermark="{x:Static localization:StaticStrings.ExampleHostnameOrIPAddress}"
                                    IsEnabled="{Binding RemoteDesktop_InheritHost, Converter={StaticResource BooleanReverseConverter}}">
                                    <TextBox.Style>
                                        <Style
                                            BasedOn="{StaticResource DefaultTextBox}"
                                            TargetType="{x:Type TextBox}">
                                            <Style.Triggers>
                                                <DataTrigger
                                                    Binding="{Binding RemoteDesktop_InheritHost}"
                                                    Value="True">
                                                    <Setter Property="TextBox.Text">
                                                        <Setter.Value>
                                                            <Binding
                                                                Mode="TwoWay"
                                                                Path="Host"
                                                                UpdateSourceTrigger="PropertyChanged" />
                                                        </Setter.Value>
                                                    </Setter>
                                                </DataTrigger>
                                                <DataTrigger
                                                    Binding="{Binding RemoteDesktop_InheritHost}"
                                                    Value="False">
                                                    <Setter Property="TextBox.Text">
                                                        <Setter.Value>
                                                            <Binding
                                                                Mode="TwoWay"
                                                                Path="RemoteDesktop_Host"
                                                                UpdateSourceTrigger="PropertyChanged">
                                                                <Binding.ValidationRules>
                                                                    <validators:EmptyValidator ValidatesOnTargetUpdated="True" />
                                                                    <validators:IPAddressOrHostnameValidator ValidatesOnTargetUpdated="True" />
                                                                </Binding.ValidationRules>
                                                            </Binding>
                                                        </Setter.Value>
                                                    </Setter>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBox.Style>
                                </TextBox>
                                <TextBlock
                                    Grid.Row="4"
                                    Grid.Column="0"
                                    Text="{x:Static localization:Strings.UseCredentials}" />
                                <mah:ToggleSwitch
                                    Grid.Row="4"
                                    Grid.Column="2"
                                    IsOn="{Binding RemoteDesktop_UseCredentials}"
                                    OffContent=""
                                    OnContent="" />
                                <TextBlock
                                    Grid.Row="6"
                                    Grid.Column="0"
                                    Text="{x:Static localization:Strings.Username}" />
                                <TextBox
                                    x:Name="TextBoxRemoteDesktopUsername"
                                    Grid.Row="6"
                                    Grid.Column="2"
                                    mah:TextBoxHelper.Watermark="{x:Static localization:StaticStrings.ExampleUsername}"
                                    IsEnabled="{Binding RemoteDesktop_UseCredentials}"
                                    Style="{StaticResource DefaultTextBox}">
                                    <TextBox.Text>
                                        <Binding
                                            Mode="TwoWay"
                                            Path="RemoteDesktop_Username"
                                            UpdateSourceTrigger="PropertyChanged">
                                            <Binding.ValidationRules>
                                                <validators:EmptyValidator ValidatesOnTargetUpdated="True" />
                                                <validators:NoSpacesValidator ValidatesOnTargetUpdated="True" />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                                <TextBlock
                                    Grid.Row="8"
                                    Grid.Column="0"
                                    Text="{x:Static localization:Strings.Domain}" />
                                <TextBox
                                    x:Name="TextBoxRemoteDesktopDomain"
                                    Grid.Row="8"
                                    Grid.Column="2"
                                    mah:TextBoxHelper.Watermark="{x:Static localization:StaticStrings.ExampleDomain}"
                                    IsEnabled="{Binding RemoteDesktop_UseCredentials}"
                                    Style="{StaticResource DefaultTextBox}">
                                    <TextBox.Text>
                                        <Binding
                                            Mode="TwoWay"
                                            Path="RemoteDesktop_Domain"
                                            UpdateSourceTrigger="PropertyChanged">
                                            <Binding.ValidationRules>
                                                <validators:EmptyOrWindowsDomainValidator ValidatesOnTargetUpdated="True" />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                                <TextBlock
                                    Grid.Row="10"
                                    Grid.Column="0"
                                    Text="{x:Static localization:Strings.Password}" />
                                <PasswordBox
                                    x:Name="PasswordBoxRemoteDesktopPassword"
                                    Grid.Row="10"
                                    Grid.Column="2"
                                    IsEnabled="{Binding RemoteDesktop_UseCredentials}">
                                    <PasswordBox.Style>
                                        <Style
                                            BasedOn="{StaticResource DefaultPasswordBox}"
                                            TargetType="{x:Type PasswordBox}">
                                            <Setter Property="mah:TextBoxHelper.Watermark" Value="{x:Static localization:Strings.NotChanged}" />
                                            <Style.Triggers>
                                                <DataTrigger
                                                    Binding="{Binding RemoteDesktop_IsPasswordEmpty}"
                                                    Value="true">
                                                    <Setter Property="mah:TextBoxHelper.Watermark" Value="{x:Static localization:StaticStrings.ExamplePassword}" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </PasswordBox.Style>
                                    <interactivity:Interaction.Behaviors>
                                        <wpfHelpers:PasswordBoxBindingBehavior Password="{Binding RemoteDesktop_Password, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    </interactivity:Interaction.Behaviors>
                                </PasswordBox>
                                <Rectangle
                                    Grid.Row="10"
                                    Grid.Column="3"
                                    Width="24"
                                    Height="24"
                                    Margin="10,0,0,0"
                                    Style="{StaticResource WarnImageRectangle}"
                                    ToolTip="{x:Static localization:Strings.WarningMessage_ProfileFileNotEncryptedStoringPasswords}"
                                    Visibility="{Binding IsProfileFileEncrypted, Converter={StaticResource BooleanReverseToVisibilityCollapsedConverter}}">
                                    <Rectangle.Resources>
                                        <Style
                                            BasedOn="{StaticResource HelpToolTip}"
                                            TargetType="{x:Type ToolTip}" />
                                    </Rectangle.Resources>
                                </Rectangle>
                                <TextBlock
                                    Grid.Row="12"
                                    Grid.Column="0"
                                    Grid.ColumnSpan="4"
                                    Margin="0,10,0,0"
                                    Style="{StaticResource HeaderTextBlock}"
                                    Text="{x:Static localization:Strings.OverrideDefaultSettings}" />
                                <Separator
                                    Grid.Row="14"
                                    Grid.Column="0"
                                    Grid.ColumnSpan="4"
                                    Margin="0,0,0,10"
                                    Background="{DynamicResource MahApps.Brushes.Gray8}" />
                                <CheckBox
                                    Grid.Row="16"
                                    Grid.Column="0"
                                    VerticalAlignment="Top"
                                    Content="{x:Static localization:Strings.Display}"
                                    IsChecked="{Binding RemoteDesktop_OverrideDisplay}"
                                    Style="{StaticResource DefaultCheckBox}" />
                                <StackPanel
                                    Grid.Row="16"
                                    Grid.Column="2"
                                    IsEnabled="{Binding RemoteDesktop_OverrideDisplay}">
                                    <RadioButton
                                        x:Name="RadioButtonAdjustScreenAutomatically"
                                        Margin="0,0,0,10"
                                        Content="{x:Static localization:Strings.AdjustScreenAutomatically}"
                                        IsChecked="{Binding RemoteDesktop_AdjustScreenAutomatically}" />
                                    <RadioButton
                                        x:Name="RadioButtonUseCurrentViewSize"
                                        Margin="0,0,0,10"
                                        Content="{x:Static localization:Strings.UseCurrentViewSize}"
                                        IsChecked="{Binding RemoteDesktop_UseCurrentViewSize}" />
                                    <RadioButton
                                        x:Name="RadioButtonFixedScreenSize"
                                        Margin="0,0,0,10"
                                        Content="{x:Static localization:Strings.FixedScreenSize}"
                                        IsChecked="{Binding RemoteDesktop_UseFixedScreenSize}" />
                                    <GroupBox
                                        x:Name="GroupBoxFixedScreenSize"
                                        Margin="25,0,0,10"
                                        IsEnabled="{Binding RemoteDesktop_UseFixedScreenSize}"
                                        Style="{StaticResource WithoutHeaderGroupBox}">
                                        <StackPanel>
                                            <TextBlock
                                                Margin="0,0,0,10"
                                                Style="{DynamicResource DefaultTextBlock}"
                                                Text="{x:Static localization:Strings.SelectAScreenResolution}" />
                                            <ComboBox
                                                ItemsSource="{Binding RemoteDesktop_ScreenResolutions}"
                                                SelectedItem="{Binding RemoteDesktop_SelectedScreenResolution}" />
                                        </StackPanel>
                                    </GroupBox>
                                    <RadioButton
                                        x:Name="RadioButtonCustomScreenSize"
                                        Margin="0,0,0,10"
                                        Content="{x:Static localization:Strings.CustomScreenSize}"
                                        IsChecked="{Binding RemoteDesktop_UseCustomScreenSize}" />
                                    <GroupBox
                                        Width="{Binding ElementName=GroupBoxFixedScreenSize, Path=ActualWidth}"
                                        Margin="25,0,0,10"
                                        IsEnabled="{Binding RemoteDesktop_UseCustomScreenSize}"
                                        Style="{StaticResource WithoutHeaderGroupBox}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="10" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="10" />
                                                <RowDefinition Height="Auto" />
                                            </Grid.RowDefinitions>
                                            <TextBlock
                                                Grid.Row="0"
                                                Grid.Column="0"
                                                Style="{StaticResource CenterTextBlock}"
                                                Text="{x:Static localization:Strings.Width}" />
                                            <TextBox
                                                Grid.Row="0"
                                                Grid.Column="2">
                                                <TextBox.Text>
                                                    <Binding
                                                        Mode="TwoWay"
                                                        Path="RemoteDesktop_CustomScreenWidth"
                                                        UpdateSourceTrigger="PropertyChanged">
                                                        <Binding.ValidationRules>
                                                            <validators:EmptyValidator ValidatesOnTargetUpdated="True" />
                                                            <validators:Int32Validator ValidatesOnTargetUpdated="True" />
                                                        </Binding.ValidationRules>
                                                    </Binding>
                                                </TextBox.Text>
                                            </TextBox>
                                            <TextBlock
                                                Grid.Row="2"
                                                Grid.Column="0"
                                                Style="{StaticResource CenterTextBlock}"
                                                Text="{x:Static localization:Strings.Height}" />
                                            <TextBox
                                                Grid.Row="2"
                                                Grid.Column="2">
                                                <TextBox.Text>
                                                    <Binding
                                                        Mode="TwoWay"
                                                        Path="RemoteDesktop_CustomScreenHeight"
                                                        UpdateSourceTrigger="PropertyChanged">
                                                        <Binding.ValidationRules>
                                                            <validators:EmptyValidator ValidatesOnTargetUpdated="True" />
                                                            <validators:Int32Validator ValidatesOnTargetUpdated="True" />
                                                        </Binding.ValidationRules>
                                                    </Binding>
                                                </TextBox.Text>
                                            </TextBox>
                                        </Grid>
                                    </GroupBox>
                                </StackPanel>
                                <CheckBox
                                    Grid.Row="18"
                                    Grid.Column="0"
                                    Content="{x:Static localization:Strings.ColorDepthBit}"
                                    IsChecked="{Binding RemoteDesktop_OverrideColorDepth}"
                                    Style="{StaticResource DefaultCheckBox}" />
                                <ComboBox
                                    Grid.Row="18"
                                    Grid.Column="2"
                                    IsEnabled="{Binding RemoteDesktop_OverrideColorDepth}"
                                    ItemsSource="{Binding RemoteDesktop_ColorDepths}"
                                    SelectedItem="{Binding RemoteDesktop_SelectedColorDepth}" />
                                <CheckBox
                                    Grid.Row="20"
                                    Grid.Column="0"
                                    Content="{x:Static localization:Strings.Port}"
                                    IsChecked="{Binding RemoteDesktop_OverridePort}"
                                    Style="{StaticResource DefaultCheckBox}" />
                                <TextBox
                                    x:Name="TextBoxRemoteDesktopPort"
                                    Grid.Row="20"
                                    Grid.Column="2"
                                    mah:TextBoxHelper.Watermark="{x:Static localization:StaticStrings.ExamplePort3389}"
                                    IsEnabled="{Binding RemoteDesktop_OverridePort}"
                                    Style="{StaticResource DefaultTextBox}">
                                    <TextBox.Text>
                                        <Binding
                                            Mode="TwoWay"
                                            Path="RemoteDesktop_Port"
                                            UpdateSourceTrigger="PropertyChanged">
                                            <Binding.ValidationRules>
                                                <validators:EmptyValidator ValidatesOnTargetUpdated="True" />
                                                <validators:PortValidator ValidatesOnTargetUpdated="True" />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                                <CheckBox
                                    Grid.Row="22"
                                    Grid.Column="0"
                                    Content="{x:Static localization:Strings.CredentialSecuritySupportProvider}"
                                    IsChecked="{Binding RemoteDesktop_OverrideCredSspSupport}"
                                    Style="{StaticResource DefaultCheckBox}" />
                                <mah:ToggleSwitch
                                    Grid.Row="22"
                                    Grid.Column="2"
                                    IsEnabled="{Binding RemoteDesktop_OverrideCredSspSupport}"
                                    IsOn="{Binding RemoteDesktop_EnableCredSspSupport}"
                                    OffContent=""
                                    OnContent="" />
                                <CheckBox
                                    Grid.Row="24"
                                    Grid.Column="0"
                                    Content="{x:Static localization:Strings.AuthenticationLevel}"
                                    IsChecked="{Binding RemoteDesktop_OverrideAuthenticationLevel}"
                                    Style="{StaticResource DefaultCheckBox}" />
                                <mah:NumericUpDown
                                    Grid.Row="24"
                                    Grid.Column="2"
                                    Interval="1"
                                    IsEnabled="{Binding RemoteDesktop_OverrideAuthenticationLevel}"
                                    Maximum="3"
                                    Minimum="0"
                                    Value="{Binding RemoteDesktop_AuthenticationLevel}" />
                                <Rectangle
                                    Grid.Row="24"
                                    Grid.Column="3"
                                    Width="24"
                                    Height="24"
                                    Margin="10,0,0,0"
                                    Style="{StaticResource HelpImageRectangle}"
                                    ToolTip="{x:Static localization:Strings.HelpMessage_RDPAuthenticationLevel}">
                                    <Rectangle.Resources>
                                        <Style
                                            BasedOn="{StaticResource HelpToolTip}"
                                            TargetType="{x:Type ToolTip}" />
                                    </Rectangle.Resources>
                                </Rectangle>
                                <CheckBox
                                    Grid.Row="26"
                                    Grid.Column="0"
                                    Content="{x:Static localization:Strings.EnableGatewayServer}"
                                    IsChecked="{Binding RemoteDesktop_OverrideGatewayServer}"
                                    Style="{StaticResource DefaultCheckBox}" />
                                <mah:ToggleSwitch
                                    Grid.Row="26"
                                    Grid.Column="2"
                                    IsEnabled="{Binding RemoteDesktop_OverrideGatewayServer}"
                                    IsOn="{Binding RemoteDesktop_EnableGatewayServer}"
                                    OffContent=""
                                    OnContent="" />
                                <TextBlock
                                    Grid.Row="28"
                                    Grid.Column="0"
                                    Margin="24,0,0,0"
                                    VerticalAlignment="Center"
                                    Style="{StaticResource DisabledTextBlock}"
                                    Text="{x:Static localization:Strings.ServerName}" />
                                <TextBox
                                    x:Name="TextBoxRemoteDesktopGatewayServerHostname"
                                    Grid.Row="28"
                                    Grid.Column="2"
                                    mah:TextBoxHelper.Watermark="{x:Static localization:StaticStrings.ExampleGatewayDomain}">
                                    <TextBox.Style>
                                        <Style
                                            BasedOn="{StaticResource DefaultTextBox}"
                                            TargetType="{x:Type TextBox}">
                                            <Setter Property="IsEnabled" Value="False" />
                                            <Style.Triggers>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding RemoteDesktop_OverrideGatewayServer}" Value="True" />
                                                        <Condition Binding="{Binding RemoteDesktop_EnableGatewayServer}" Value="True" />
                                                    </MultiDataTrigger.Conditions>
                                                    <MultiDataTrigger.Setters>
                                                        <Setter Property="IsEnabled" Value="True" />
                                                    </MultiDataTrigger.Setters>
                                                </MultiDataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBox.Style>
                                    <TextBox.Text>
                                        <Binding
                                            Mode="TwoWay"
                                            Path="RemoteDesktop_GatewayServerHostname"
                                            UpdateSourceTrigger="PropertyChanged">
                                            <Binding.ValidationRules>
                                                <validators:EmptyValidator ValidatesOnTargetUpdated="True" />
                                                <validators:RemoteDesktopHostnameAndPortValidator ValidatesOnTargetUpdated="True" />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                                <TextBlock
                                    Grid.Row="30"
                                    Grid.Column="0"
                                    Margin="24,0,0,0"
                                    VerticalAlignment="Center"
                                    Style="{StaticResource DisabledTextBlock}"
                                    Text="{x:Static localization:Strings.BypassForLocalAddresses}" />
                                <mah:ToggleSwitch
                                    Grid.Row="30"
                                    Grid.Column="2"
                                    Content=""
                                    IsOn="{Binding RemoteDesktop_GatewayServerBypassLocalAddresses}"
                                    OnContent="">
                                    <mah:ToggleSwitch.Style>
                                        <Style
                                            BasedOn="{StaticResource DefaultToggleSwitch}"
                                            TargetType="{x:Type mah:ToggleSwitch}">
                                            <Setter Property="IsEnabled" Value="False" />
                                            <Style.Triggers>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding RemoteDesktop_OverrideGatewayServer}" Value="True" />
                                                        <Condition Binding="{Binding RemoteDesktop_EnableGatewayServer}" Value="True" />
                                                    </MultiDataTrigger.Conditions>
                                                    <MultiDataTrigger.Setters>
                                                        <Setter Property="IsEnabled" Value="True" />
                                                    </MultiDataTrigger.Setters>
                                                </MultiDataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </mah:ToggleSwitch.Style>
                                </mah:ToggleSwitch>
                                <TextBlock
                                    Grid.Row="32"
                                    Grid.Column="0"
                                    Margin="24,0,0,0"
                                    VerticalAlignment="Center"
                                    Style="{StaticResource DisabledTextBlock}"
                                    Text="{x:Static localization:Strings.LogonMethod}" />
                                <ComboBox
                                    Grid.Row="32"
                                    Grid.Column="2"
                                    ItemsSource="{Binding RemoteDesktop_GatewayServerLogonMethods}"
                                    SelectedItem="{Binding RemoteDesktop_GatewayServerLogonMethod}">
                                    <ComboBox.Style>
                                        <Style
                                            BasedOn="{StaticResource DefaultComboBox}"
                                            TargetType="{x:Type ComboBox}">
                                            <Setter Property="IsEnabled" Value="False" />
                                            <Style.Triggers>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding RemoteDesktop_OverrideGatewayServer}" Value="True" />
                                                        <Condition Binding="{Binding RemoteDesktop_EnableGatewayServer}" Value="True" />
                                                    </MultiDataTrigger.Conditions>
                                                    <MultiDataTrigger.Setters>
                                                        <Setter Property="IsEnabled" Value="True" />
                                                    </MultiDataTrigger.Setters>
                                                </MultiDataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ComboBox.Style>
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock
                                                Style="{StaticResource DefaultTextBlock}"
                                                Text="{Binding Converter={StaticResource RemoteDesktopGatewayServerLogonMethodToStringConverter}}" />
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>
                                <TextBlock
                                    Grid.Row="34"
                                    Grid.Column="0"
                                    Margin="24,0,0,0"
                                    VerticalAlignment="Center"
                                    Style="{StaticResource DisabledTextBlock}"
                                    Text="{x:Static localization:Strings.ShareGatewayCredentialsWithRemoteComputer}" />
                                <mah:ToggleSwitch
                                    Grid.Row="34"
                                    Grid.Column="2"
                                    Content=""
                                    IsOn="{Binding RemoteDesktop_GatewayServerShareCredentialsWithRemoteComputer}"
                                    OnContent="">
                                    <mah:ToggleSwitch.Style>
                                        <Style
                                            BasedOn="{StaticResource DefaultToggleSwitch}"
                                            TargetType="{x:Type mah:ToggleSwitch}">
                                            <Setter Property="IsEnabled" Value="False" />
                                            <Style.Triggers>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding RemoteDesktop_OverrideGatewayServer}" Value="True" />
                                                        <Condition Binding="{Binding RemoteDesktop_EnableGatewayServer}" Value="True" />
                                                    </MultiDataTrigger.Conditions>
                                                    <MultiDataTrigger.Setters>
                                                        <Setter Property="IsEnabled" Value="True" />
                                                    </MultiDataTrigger.Setters>
                                                </MultiDataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </mah:ToggleSwitch.Style>
                                </mah:ToggleSwitch>
                                <TextBlock
                                    Grid.Row="36"
                                    Grid.Column="0"
                                    Margin="24,0,0,0"
                                    VerticalAlignment="Center"
                                    Style="{StaticResource DisabledTextBlock}"
                                    Text="{x:Static localization:Strings.UseGatewayCredentials}" />
                                <mah:ToggleSwitch
                                    Grid.Row="36"
                                    Grid.Column="2"
                                    Content=""
                                    IsOn="{Binding RemoteDesktop_UseGatewayServerCredentials}"
                                    OnContent="">
                                    <mah:ToggleSwitch.Style>
                                        <Style
                                            BasedOn="{StaticResource DefaultToggleSwitch}"
                                            TargetType="{x:Type mah:ToggleSwitch}">
                                            <Setter Property="IsEnabled" Value="False" />
                                            <Style.Triggers>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding RemoteDesktop_OverrideGatewayServer}" Value="True" />
                                                        <Condition Binding="{Binding RemoteDesktop_EnableGatewayServer}" Value="True" />
                                                        <Condition Binding="{Binding RemoteDesktop_GatewayServerLogonMethod}" Value="Userpass" />
                                                    </MultiDataTrigger.Conditions>
                                                    <MultiDataTrigger.Setters>
                                                        <Setter Property="IsEnabled" Value="True" />
                                                    </MultiDataTrigger.Setters>
                                                </MultiDataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </mah:ToggleSwitch.Style>
                                </mah:ToggleSwitch>
                                <TextBlock
                                    Grid.Row="38"
                                    Grid.Column="0"
                                    Margin="24,0,0,0"
                                    VerticalAlignment="Center"
                                    Style="{StaticResource DisabledTextBlock}"
                                    Text="{x:Static localization:Strings.Username}" />
                                <TextBox
                                    x:Name="TextBoxRemoteDesktopGatewayServerUsername"
                                    Grid.Row="38"
                                    Grid.Column="2"
                                    mah:TextBoxHelper.Watermark="{x:Static localization:StaticStrings.ExampleUsername}">
                                    <TextBox.Style>
                                        <Style
                                            BasedOn="{StaticResource DefaultTextBox}"
                                            TargetType="{x:Type TextBox}">
                                            <Setter Property="IsEnabled" Value="False" />
                                            <Style.Triggers>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding RemoteDesktop_EnableGatewayServer}" Value="True" />
                                                        <Condition Binding="{Binding RemoteDesktop_UseGatewayServerCredentials}" Value="True" />
                                                        <Condition Binding="{Binding RemoteDesktop_GatewayServerLogonMethod}" Value="Userpass" />
                                                    </MultiDataTrigger.Conditions>
                                                    <MultiDataTrigger.Setters>
                                                        <Setter Property="IsEnabled" Value="True" />
                                                    </MultiDataTrigger.Setters>
                                                </MultiDataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBox.Style>
                                    <TextBox.Text>
                                        <Binding
                                            Mode="TwoWay"
                                            Path="RemoteDesktop_GatewayServerUsername"
                                            UpdateSourceTrigger="PropertyChanged">
                                            <Binding.ValidationRules>
                                                <validators:EmptyValidator ValidatesOnTargetUpdated="True" />
                                                <validators:NoSpacesValidator ValidatesOnTargetUpdated="True" />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                                <TextBlock
                                    Grid.Row="40"
                                    Grid.Column="0"
                                    Margin="24,0,0,0"
                                    VerticalAlignment="Center"
                                    Style="{StaticResource DisabledTextBlock}"
                                    Text="{x:Static localization:Strings.Domain}" />
                                <TextBox
                                    x:Name="TextBoxRemoteDesktopGatewayServerDomain"
                                    Grid.Row="40"
                                    Grid.Column="2"
                                    mah:TextBoxHelper.Watermark="{x:Static localization:StaticStrings.ExampleDomain}">
                                    <TextBox.Style>
                                        <Style
                                            BasedOn="{StaticResource DefaultTextBox}"
                                            TargetType="{x:Type TextBox}">
                                            <Setter Property="IsEnabled" Value="False" />
                                            <Style.Triggers>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding RemoteDesktop_EnableGatewayServer}" Value="True" />
                                                        <Condition Binding="{Binding RemoteDesktop_UseGatewayServerCredentials}" Value="True" />
                                                        <Condition Binding="{Binding RemoteDesktop_GatewayServerLogonMethod}" Value="Userpass" />
                                                    </MultiDataTrigger.Conditions>
                                                    <MultiDataTrigger.Setters>
                                                        <Setter Property="IsEnabled" Value="True" />
                                                    </MultiDataTrigger.Setters>
                                                </MultiDataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBox.Style>
                                    <TextBox.Text>
                                        <Binding
                                            Mode="TwoWay"
                                            Path="RemoteDesktop_GatewayServerDomain"
                                            UpdateSourceTrigger="PropertyChanged">
                                            <Binding.ValidationRules>
                                                <validators:EmptyOrWindowsDomainValidator ValidatesOnTargetUpdated="True" />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                                <TextBlock
                                    Grid.Row="42"
                                    Grid.Column="0"
                                    Margin="24,0,0,0"
                                    VerticalAlignment="Center"
                                    Style="{StaticResource DisabledTextBlock}"
                                    Text="{x:Static localization:Strings.Password}" />
                                <PasswordBox
                                    x:Name="PasswordBoxRemoteDesktopGatewayServerPassword"
                                    Grid.Row="42"
                                    Grid.Column="2">
                                    <PasswordBox.Style>
                                        <Style
                                            BasedOn="{StaticResource DefaultPasswordBox}"
                                            TargetType="{x:Type PasswordBox}">
                                            <Setter Property="IsEnabled" Value="False" />
                                            <Setter Property="mah:TextBoxHelper.Watermark" Value="{x:Static localization:Strings.NotChanged}" />
                                            <Style.Triggers>
                                                <DataTrigger
                                                    Binding="{Binding RemoteDesktop_IsGatewayServerPasswordEmpty}"
                                                    Value="true">
                                                    <Setter Property="mah:TextBoxHelper.Watermark" Value="{x:Static localization:StaticStrings.ExamplePassword}" />
                                                </DataTrigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding RemoteDesktop_EnableGatewayServer}" Value="True" />
                                                        <Condition Binding="{Binding RemoteDesktop_UseGatewayServerCredentials}" Value="True" />
                                                        <Condition Binding="{Binding RemoteDesktop_GatewayServerLogonMethod}" Value="Userpass" />
                                                    </MultiDataTrigger.Conditions>
                                                    <MultiDataTrigger.Setters>
                                                        <Setter Property="IsEnabled" Value="True" />
                                                    </MultiDataTrigger.Setters>
                                                </MultiDataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </PasswordBox.Style>
                                    <interactivity:Interaction.Behaviors>
                                        <wpfHelpers:PasswordBoxBindingBehavior Password="{Binding RemoteDesktop_GatewayServerPassword, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    </interactivity:Interaction.Behaviors>
                                </PasswordBox>
                                <Rectangle
                                    Grid.Row="42"
                                    Grid.Column="3"
                                    Width="24"
                                    Height="24"
                                    Margin="10,0,0,0"
                                    Style="{StaticResource WarnImageRectangle}"
                                    ToolTip="{x:Static localization:Strings.WarningMessage_ProfileFileNotEncryptedStoringPasswords}"
                                    Visibility="{Binding IsProfileFileEncrypted, Converter={StaticResource BooleanReverseToVisibilityCollapsedConverter}}">
                                    <Rectangle.Resources>
                                        <Style
                                            BasedOn="{StaticResource HelpToolTip}"
                                            TargetType="{x:Type ToolTip}" />
                                    </Rectangle.Resources>
                                </Rectangle>
                                <CheckBox
                                    Grid.Row="44"
                                    Grid.Column="0"
                                    Content="{x:Static localization:Strings.RemoteAudioPlayback}"
                                    IsChecked="{Binding RemoteDesktop_OverrideAudioRedirectionMode}"
                                    Style="{StaticResource DefaultCheckBox}" />
                                <ComboBox
                                    Grid.Row="44"
                                    Grid.Column="2"
                                    IsEnabled="{Binding RemoteDesktop_OverrideAudioRedirectionMode}"
                                    ItemsSource="{Binding RemoteDesktop_AudioRedirectionModes}"
                                    SelectedItem="{Binding RemoteDesktop_AudioRedirectionMode}">
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock
                                                Style="{StaticResource DefaultTextBlock}"
                                                Text="{Binding Converter={StaticResource RemoteDesktopAudioRedirectionModeToStringConverter}}" />
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>
                                <CheckBox
                                    Grid.Row="46"
                                    Grid.Column="0"
                                    Content="{x:Static localization:Strings.RemoteAudioRecording}"
                                    IsChecked="{Binding RemoteDesktop_OverrideAudioCaptureRedirectionMode}"
                                    Style="{StaticResource DefaultCheckBox}" />
                                <ComboBox
                                    Grid.Row="46"
                                    Grid.Column="2"
                                    IsEnabled="{Binding RemoteDesktop_OverrideAudioCaptureRedirectionMode}"
                                    ItemsSource="{Binding RemoteDesktop_AudioCaptureRedirectionModes}"
                                    SelectedItem="{Binding RemoteDesktop_AudioCaptureRedirectionMode}">
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock
                                                Style="{StaticResource DefaultTextBlock}"
                                                Text="{Binding Converter={StaticResource RemoteDesktopAudioCaptureRedirectionModeToStringConverter}}" />
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>
                                <CheckBox
                                    Grid.Row="48"
                                    Grid.Column="0"
                                    Content="{x:Static localization:Strings.ApplyWindowsKeyCombinations}"
                                    IsChecked="{Binding RemoteDesktop_OverrideApplyWindowsKeyCombinations}"
                                    Style="{StaticResource DefaultCheckBox}" />
                                <ComboBox
                                    Grid.Row="48"
                                    Grid.Column="2"
                                    IsEnabled="{Binding RemoteDesktop_OverrideApplyWindowsKeyCombinations}"
                                    ItemsSource="{Binding RemoteDesktop_KeyboardHookModes}"
                                    SelectedItem="{Binding RemoteDesktop_KeyboardHookMode}">
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock
                                                Style="{StaticResource DefaultTextBlock}"
                                                Text="{Binding Converter={StaticResource RemoteDesktopKeyboardHookModeToStringConverter}}" />
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>
                                <CheckBox
                                    Grid.Row="50"
                                    Grid.Column="0"
                                    Content="{x:Static localization:Strings.RedirectClipboard}"
                                    IsChecked="{Binding RemoteDesktop_OverrideRedirectClipboard}"
                                    Style="{StaticResource DefaultCheckBox}" />
                                <mah:ToggleSwitch
                                    Grid.Row="50"
                                    Grid.Column="2"
                                    IsEnabled="{Binding RemoteDesktop_OverrideRedirectClipboard}"
                                    IsOn="{Binding RemoteDesktop_RedirectClipboard}"
                                    OffContent=""
                                    OnContent="" />
                                <CheckBox
                                    Grid.Row="52"
                                    Grid.Column="0"
                                    Content="{x:Static localization:Strings.RedirectDevices}"
                                    IsChecked="{Binding RemoteDesktop_OverrideRedirectDevices}"
                                    Style="{StaticResource DefaultCheckBox}" />
                                <mah:ToggleSwitch
                                    Grid.Row="52"
                                    Grid.Column="2"
                                    IsEnabled="{Binding RemoteDesktop_OverrideRedirectDevices}"
                                    IsOn="{Binding RemoteDesktop_RedirectDevices}"
                                    OffContent=""
                                    OnContent="" />
                                <CheckBox
                                    Grid.Row="54"
                                    Grid.Column="0"
                                    Content="{x:Static localization:Strings.RedirectDrives}"
                                    IsChecked="{Binding RemoteDesktop_OverrideRedirectDrives}"
                                    Style="{StaticResource DefaultCheckBox}" />
                                <mah:ToggleSwitch
                                    Grid.Row="54"
                                    Grid.Column="2"
                                    IsEnabled="{Binding RemoteDesktop_OverrideRedirectDrives}"
                                    IsOn="{Binding RemoteDesktop_RedirectDrives}"
                                    OffContent=""
                                    OnContent="" />
                                <CheckBox
                                    Grid.Row="56"
                                    Grid.Column="0"
                                    Content="{x:Static localization:Strings.RedirectPorts}"
                                    IsChecked="{Binding RemoteDesktop_OverrideRedirectPorts}"
                                    Style="{StaticResource DefaultCheckBox}" />
                                <mah:ToggleSwitch
                                    Grid.Row="56"
                                    Grid.Column="2"
                                    IsEnabled="{Binding RemoteDesktop_OverrideRedirectPorts}"
                                    IsOn="{Binding RemoteDesktop_RedirectPorts}"
                                    OffContent=""
                                    OnContent="" />
                                <CheckBox
                                    Grid.Row="58"
                                    Grid.Column="0"
                                    Content="{x:Static localization:Strings.RedirectSmartcards}"
                                    IsChecked="{Binding RemoteDesktop_OverrideRedirectSmartcards}"
                                    Style="{StaticResource DefaultCheckBox}" />
                                <mah:ToggleSwitch
                                    Grid.Row="58"
                                    Grid.Column="2"
                                    IsEnabled="{Binding RemoteDesktop_OverrideRedirectSmartcards}"
                                    IsOn="{Binding RemoteDesktop_RedirectSmartCards}"
                                    OffContent=""
                                    OnContent="" />
                                <CheckBox
                                    Grid.Row="60"
                                    Grid.Column="0"
                                    Content="{x:Static localization:Strings.RedirectPrinters}"
                                    IsChecked="{Binding RemoteDesktop_OverrideRedirectPrinters}"
                                    Style="{StaticResource DefaultCheckBox}" />
                                <mah:ToggleSwitch
                                    Grid.Row="60"
                                    Grid.Column="2"
                                    IsEnabled="{Binding RemoteDesktop_OverrideRedirectPrinters}"
                                    IsOn="{Binding RemoteDesktop_RedirectPrinters}"
                                    OffContent=""
                                    OnContent="" />
                                <CheckBox
                                    Grid.Row="62"
                                    Grid.Column="0"
                                    Content="{x:Static localization:Strings.PersistentBitmapCaching}"
                                    IsChecked="{Binding RemoteDesktop_OverridePersistentBitmapCaching}"
                                    Style="{StaticResource DefaultCheckBox}" />
                                <mah:ToggleSwitch
                                    Grid.Row="62"
                                    Grid.Column="2"
                                    IsEnabled="{Binding RemoteDesktop_OverridePersistentBitmapCaching}"
                                    IsOn="{Binding RemoteDesktop_PersistentBitmapCaching}"
                                    OffContent=""
                                    OnContent="" />
                                <CheckBox
                                    Grid.Row="64"
                                    Grid.Column="0"
                                    Content="{x:Static localization:Strings.ReconnectIfTheConnectionIsDropped}"
                                    IsChecked="{Binding RemoteDesktop_OverrideReconnectIfTheConnectionIsDropped}"
                                    Style="{StaticResource DefaultCheckBox}" />
                                <mah:ToggleSwitch
                                    Grid.Row="64"
                                    Grid.Column="2"
                                    IsEnabled="{Binding RemoteDesktop_OverrideReconnectIfTheConnectionIsDropped}"
                                    IsOn="{Binding RemoteDesktop_ReconnectIfTheConnectionIsDropped}"
                                    OffContent=""
                                    OnContent="" />
                                <CheckBox
                                    Grid.Row="66"
                                    Grid.Column="0"
                                    Content="{x:Static localization:Strings.NetworkConnectionType}"
                                    IsChecked="{Binding RemoteDesktop_OverrideNetworkConnectionType}"
                                    Style="{StaticResource DefaultCheckBox}" />
                                <ComboBox
                                    Grid.Row="66"
                                    Grid.Column="2"
                                    IsEnabled="{Binding RemoteDesktop_OverrideNetworkConnectionType}"
                                    ItemsSource="{Binding RemoteDesktop_NetworkConnectionTypes}"
                                    SelectedItem="{Binding RemoteDesktop_NetworkConnectionType}">
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock
                                                Style="{StaticResource DefaultTextBlock}"
                                                Text="{Binding Converter={StaticResource RemoteDesktopNetworkConnectionTypeToStringConverter}}" />
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>
                                <TextBlock
                                    Grid.Row="68"
                                    Grid.Column="0"
                                    Margin="24,0,0,0"
                                    VerticalAlignment="Center"
                                    Style="{StaticResource DisabledTextBlock}"
                                    Text="{x:Static localization:Strings.DesktopBackground}" />
                                <mah:ToggleSwitch
                                    Grid.Row="68"
                                    Grid.Column="2"
                                    IsEnabled="{Binding RemoteDesktop_OverrideNetworkConnectionType}"
                                    IsOn="{Binding RemoteDesktop_DesktopBackground}"
                                    OffContent=""
                                    OnContent="" />
                                <TextBlock
                                    Grid.Row="70"
                                    Grid.Column="0"
                                    Margin="24,0,0,0"
                                    VerticalAlignment="Center"
                                    Style="{StaticResource DisabledTextBlock}"
                                    Text="{x:Static localization:Strings.FontSmoothing}" />
                                <mah:ToggleSwitch
                                    Grid.Row="70"
                                    Grid.Column="2"
                                    IsEnabled="{Binding RemoteDesktop_OverrideNetworkConnectionType}"
                                    IsOn="{Binding RemoteDesktop_FontSmoothing}"
                                    OffContent=""
                                    OnContent="" />
                                <TextBlock
                                    Grid.Row="72"
                                    Grid.Column="0"
                                    Margin="24,0,0,0"
                                    VerticalAlignment="Center"
                                    Style="{StaticResource DisabledTextBlock}"
                                    Text="{x:Static localization:Strings.DesktopComposition}" />
                                <mah:ToggleSwitch
                                    Grid.Row="72"
                                    Grid.Column="2"
                                    IsEnabled="{Binding RemoteDesktop_OverrideNetworkConnectionType}"
                                    IsOn="{Binding RemoteDesktop_DesktopComposition}"
                                    OffContent=""
                                    OnContent="" />
                                <TextBlock
                                    Grid.Row="74"
                                    Grid.Column="0"
                                    Margin="24,0,0,0"
                                    VerticalAlignment="Center"
                                    Style="{StaticResource DisabledTextBlock}"
                                    Text="{x:Static localization:Strings.ShowWindowContentsWhileDragging}" />
                                <mah:ToggleSwitch
                                    Grid.Row="74"
                                    Grid.Column="2"
                                    IsEnabled="{Binding RemoteDesktop_OverrideNetworkConnectionType}"
                                    IsOn="{Binding RemoteDesktop_ShowWindowContentsWhileDragging}"
                                    OffContent=""
                                    OnContent="" />
                                <TextBlock
                                    Grid.Row="76"
                                    Grid.Column="0"
                                    Margin="24,0,0,0"
                                    VerticalAlignment="Center"
                                    Style="{StaticResource DisabledTextBlock}"
                                    Text="{x:Static localization:Strings.MenuAndWindowAnimation}" />
                                <mah:ToggleSwitch
                                    Grid.Row="76"
                                    Grid.Column="2"
                                    IsEnabled="{Binding RemoteDesktop_OverrideNetworkConnectionType}"
                                    IsOn="{Binding RemoteDesktop_MenuAndWindowAnimation}"
                                    OffContent=""
                                    OnContent="" />
                                <TextBlock
                                    Grid.Row="78"
                                    Grid.Column="0"
                                    Margin="24,0,0,0"
                                    VerticalAlignment="Center"
                                    Style="{StaticResource DisabledTextBlock}"
                                    Text="{x:Static localization:Strings.VisualStyles}" />
                                <mah:ToggleSwitch
                                    Grid.Row="78"
                                    Grid.Column="2"
                                    IsEnabled="{Binding RemoteDesktop_OverrideNetworkConnectionType}"
                                    IsOn="{Binding RemoteDesktop_VisualStyles}"
                                    OffContent=""
                                    OnContent="" />
                            </Grid>
                        </StackPanel>
                    </ScrollViewer>
                </TabItem>
                <TabItem Header="{x:Static localization:Strings.PowerShell}">
                    <ScrollViewer HorizontalScrollBarVisibility="Disabled">
                        <StackPanel
                            Margin="0,0,0,20"
                            IsEnabled="{Binding PowerShell_Enabled}">
                            <Grid>
                                <Grid.Resources>
                                    <Style
                                        BasedOn="{StaticResource CenterTextBlock}"
                                        TargetType="{x:Type TextBlock}" />
                                    <Style
                                        BasedOn="{StaticResource DefaultTextBox}"
                                        TargetType="{x:Type TextBox}" />
                                </Grid.Resources>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="10" />
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="34" />
                                </Grid.ColumnDefinitions>
                                <TextBlock
                                    Grid.Row="0"
                                    Grid.Column="0"
                                    Text="{x:Static localization:Strings.RemoteConsole}" />
                                <mah:ToggleSwitch
                                    Grid.Row="0"
                                    Grid.Column="2"
                                    IsOn="{Binding PowerShell_EnableRemoteConsole}"
                                    OffContent=""
                                    OnContent="" />
                                <TextBlock
                                    Grid.Row="2"
                                    Grid.Column="0"
                                    Text="{x:Static localization:Strings.InheritHostFromGeneral}" />
                                <mah:ToggleSwitch
                                    Grid.Row="2"
                                    Grid.Column="2"
                                    IsEnabled="{Binding PowerShell_EnableRemoteConsole}"
                                    IsOn="{Binding PowerShell_InheritHost}"
                                    OffContent=""
                                    OnContent="" />
                                <TextBlock
                                    Grid.Row="4"
                                    Grid.Column="0"
                                    Text="{x:Static localization:Strings.Host}" />
                                <TextBox
                                    x:Name="TextBoxPowerShellHost"
                                    Grid.Row="4"
                                    Grid.Column="2"
                                    mah:TextBoxHelper.Watermark="{x:Static localization:StaticStrings.ExampleHostnameOrIPAddress}">
                                    <TextBox.Style>
                                        <Style
                                            BasedOn="{StaticResource DefaultTextBox}"
                                            TargetType="{x:Type TextBox}">
                                            <Style.Triggers>
                                                <DataTrigger
                                                    Binding="{Binding PowerShell_Enabled}"
                                                    Value="False">
                                                    <Setter Property="IsEnabled" Value="False" />
                                                </DataTrigger>
                                                <DataTrigger
                                                    Binding="{Binding PowerShell_EnableRemoteConsole}"
                                                    Value="False">
                                                    <Setter Property="IsEnabled" Value="False" />
                                                </DataTrigger>
                                                <DataTrigger
                                                    Binding="{Binding PowerShell_InheritHost}"
                                                    Value="True">
                                                    <Setter Property="IsEnabled" Value="False" />
                                                </DataTrigger>
                                                <DataTrigger
                                                    Binding="{Binding PowerShell_InheritHost}"
                                                    Value="True">
                                                    <Setter Property="TextBox.Text">
                                                        <Setter.Value>
                                                            <Binding
                                                                Mode="TwoWay"
                                                                Path="Host"
                                                                UpdateSourceTrigger="PropertyChanged" />
                                                        </Setter.Value>
                                                    </Setter>
                                                </DataTrigger>
                                                <DataTrigger
                                                    Binding="{Binding PowerShell_InheritHost}"
                                                    Value="False">
                                                    <Setter Property="TextBox.Text">
                                                        <Setter.Value>
                                                            <Binding
                                                                Mode="TwoWay"
                                                                Path="PowerShell_Host"
                                                                UpdateSourceTrigger="PropertyChanged">
                                                                <Binding.ValidationRules>
                                                                    <validators:EmptyValidator ValidatesOnTargetUpdated="True" />
                                                                    <validators:IPAddressOrHostnameValidator ValidatesOnTargetUpdated="True" />
                                                                </Binding.ValidationRules>
                                                            </Binding>
                                                        </Setter.Value>
                                                    </Setter>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBox.Style>
                                </TextBox>
                                <TextBlock
                                    Grid.Row="6"
                                    Grid.Column="0"
                                    Grid.ColumnSpan="4"
                                    Margin="0,10,0,0"
                                    Style="{StaticResource HeaderTextBlock}"
                                    Text="{x:Static localization:Strings.OverrideDefaultSettings}" />
                                <Separator
                                    Grid.Row="8"
                                    Grid.Column="0"
                                    Grid.ColumnSpan="4"
                                    Margin="0,0,0,10"
                                    Background="{DynamicResource MahApps.Brushes.Gray8}" />
                                <CheckBox
                                    Grid.Row="10"
                                    Grid.Column="0"
                                    Content="{x:Static localization:Strings.Command}"
                                    IsChecked="{Binding PowerShell_OverrideCommand}"
                                    IsEnabled="{Binding PowerShell_EnableRemoteConsole, Converter={StaticResource BooleanReverseConverter}}"
                                    Style="{StaticResource DefaultCheckBox}" />
                                <TextBox
                                    Grid.Row="10"
                                    Grid.Column="2"
                                    Text="{Binding PowerShell_Command, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                    <TextBox.Style>
                                        <Style
                                            BasedOn="{StaticResource DefaultTextBox}"
                                            TargetType="{x:Type TextBox}">
                                            <Style.Triggers>
                                                <DataTrigger
                                                    Binding="{Binding PowerShell_EnableRemoteConsole}"
                                                    Value="True">
                                                    <Setter Property="IsEnabled" Value="False" />
                                                </DataTrigger>
                                                <DataTrigger
                                                    Binding="{Binding PowerShell_OverrideCommand}"
                                                    Value="False">
                                                    <Setter Property="IsEnabled" Value="False" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBox.Style>
                                </TextBox>
                                <CheckBox
                                    Grid.Row="12"
                                    Grid.Column="0"
                                    Content="{x:Static localization:Strings.AdditionalCommandLine}"
                                    IsChecked="{Binding PowerShell_OverrideAdditionalCommandLine}"
                                    Style="{StaticResource DefaultCheckBox}" />
                                <TextBox
                                    Grid.Row="12"
                                    Grid.Column="2"
                                    IsEnabled="{Binding PowerShell_OverrideAdditionalCommandLine}"
                                    Style="{StaticResource DefaultTextBox}"
                                    Text="{Binding PowerShell_AdditionalCommandLine, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                <CheckBox
                                    Grid.Row="14"
                                    Grid.Column="0"
                                    Content="{x:Static localization:Strings.ExecutionPolicy}"
                                    IsChecked="{Binding PowerShell_OverrideExecutionPolicy}"
                                    Style="{StaticResource DefaultCheckBox}" />
                                <ComboBox
                                    Grid.Row="14"
                                    Grid.Column="2"
                                    IsEnabled="{Binding PowerShell_OverrideExecutionPolicy}"
                                    ItemsSource="{Binding PowerShell_ExecutionPolicies}"
                                    SelectedItem="{Binding PowerShell_ExecutionPolicy}" />
                            </Grid>
                        </StackPanel>
                    </ScrollViewer>
                </TabItem>
                <TabItem Header="{x:Static localization:Strings.PuTTY}">
                    <ScrollViewer HorizontalScrollBarVisibility="Disabled">
                        <StackPanel IsEnabled="{Binding PuTTY_Enabled}">
                            <Grid>
                                <Grid.Resources>
                                    <Style
                                        BasedOn="{StaticResource CenterTextBlock}"
                                        TargetType="{x:Type TextBlock}" />
                                    <Style
                                        BasedOn="{StaticResource DefaultTextBox}"
                                        TargetType="{x:Type TextBox}" />
                                </Grid.Resources>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="10" />
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="34" />
                                </Grid.ColumnDefinitions>
                                <TextBlock
                                    Grid.Row="0"
                                    Grid.Column="0"
                                    Text="{x:Static localization:Strings.Mode}" />
                                <WrapPanel
                                    Grid.Row="0"
                                    Grid.Column="2"
                                    Orientation="Horizontal">
                                    <WrapPanel.Resources>
                                        <Style
                                            BasedOn="{StaticResource DefaultRadioButton}"
                                            TargetType="{x:Type RadioButton}">
                                            <Setter Property="Margin" Value="0,5,10,5" />
                                        </Style>
                                    </WrapPanel.Resources>
                                    <RadioButton
                                        Content="{x:Static localization:Strings.SSH}"
                                        IsChecked="{Binding PuTTY_UseSSH}" />
                                    <RadioButton
                                        Content="{x:Static localization:Strings.Telnet}"
                                        IsChecked="{Binding PuTTY_UseTelnet}" />
                                    <RadioButton
                                        Content="{x:Static localization:Strings.Serial}"
                                        IsChecked="{Binding PuTTY_UseSerial}" />
                                    <RadioButton
                                        Content="{x:Static localization:Strings.Rlogin}"
                                        IsChecked="{Binding PuTTY_UseRlogin}" />
                                    <RadioButton
                                        Content="{x:Static localization:Strings.RAW}"
                                        IsChecked="{Binding PuTTY_UseRAW}" />
                                </WrapPanel>
                                <TextBlock
                                    Grid.Row="2"
                                    Grid.Column="0"
                                    Text="{x:Static localization:Strings.InheritHostFromGeneral}"
                                    Visibility="{Binding PuTTY_UseSerial, Converter={StaticResource BooleanReverseToVisibilityCollapsedConverter}}" />
                                <mah:ToggleSwitch
                                    Grid.Row="2"
                                    Grid.Column="2"
                                    IsOn="{Binding PuTTY_InheritHost}"
                                    OffContent=""
                                    OnContent=""
                                    Visibility="{Binding PuTTY_UseSerial, Converter={StaticResource BooleanReverseToVisibilityCollapsedConverter}}" />
                                <TextBlock
                                    Grid.Row="4"
                                    Grid.Column="0">
                                    <TextBlock.Style>
                                        <Style
                                            BasedOn="{StaticResource CenterTextBlock}"
                                            TargetType="{x:Type TextBlock}">
                                            <Setter Property="Text" Value="{x:Static localization:Strings.Host}" />
                                            <Style.Triggers>
                                                <DataTrigger
                                                    Binding="{Binding PuTTY_UseSerial}"
                                                    Value="True">
                                                    <Setter Property="Text" Value="{x:Static localization:Strings.SerialLine}" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                                <TextBox
                                    x:Name="TextBoxPuTTYHost"
                                    Grid.Row="4"
                                    Grid.Column="2"
                                    mah:TextBoxHelper.Watermark="{x:Static localization:StaticStrings.ExampleHostnameOrIPAddress}"
                                    Visibility="{Binding PuTTY_UseSerial, Converter={StaticResource BooleanReverseToVisibilityCollapsedConverter}}">
                                    <TextBox.Style>
                                        <Style
                                            BasedOn="{StaticResource DefaultTextBox}"
                                            TargetType="{x:Type TextBox}">
                                            <Setter Property="Text">
                                                <Setter.Value>
                                                    <Binding
                                                        Mode="TwoWay"
                                                        Path="PuTTY_Host"
                                                        UpdateSourceTrigger="PropertyChanged">
                                                        <Binding.ValidationRules>
                                                            <validators:EmptyValidator ValidatesOnTargetUpdated="True" />
                                                            <validators:IPAddressOrHostnameValidator ValidatesOnTargetUpdated="True" />
                                                        </Binding.ValidationRules>
                                                    </Binding>
                                                </Setter.Value>
                                            </Setter>
                                            <Style.Triggers>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding PuTTY_InheritHost}" Value="True" />
                                                        <Condition Binding="{Binding PuTTY_UseSerial}" Value="False" />
                                                    </MultiDataTrigger.Conditions>
                                                    <MultiDataTrigger.Setters>
                                                        <Setter Property="IsEnabled" Value="False" />
                                                        <Setter Property="TextBox.Text">
                                                            <Setter.Value>
                                                                <Binding
                                                                    Mode="TwoWay"
                                                                    Path="Host"
                                                                    UpdateSourceTrigger="PropertyChanged" />
                                                            </Setter.Value>
                                                        </Setter>
                                                    </MultiDataTrigger.Setters>
                                                </MultiDataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBox.Style>
                                </TextBox>
                                <TextBox
                                    x:Name="TextBoxPuTTYSerialLine"
                                    Grid.Row="4"
                                    Grid.Column="2"
                                    mah:TextBoxHelper.Watermark="{x:Static localization:StaticStrings.ExampleHostnameOrIPAddress}"
                                    Style="{StaticResource DefaultTextBox}"
                                    Visibility="{Binding PuTTY_UseSerial, Converter={StaticResource BooleanToVisibilityCollapsedConverter}}">
                                    <TextBox.Text>
                                        <Binding
                                            Mode="TwoWay"
                                            Path="PuTTY_SerialLine"
                                            UpdateSourceTrigger="PropertyChanged">
                                            <Binding.ValidationRules>
                                                <validators:EmptyValidator ValidatesOnTargetUpdated="True" />
                                                <validators:NoSpacesValidator ValidatesOnTargetUpdated="True" />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                                <TextBlock
                                    Grid.Row="6"
                                    Grid.Column="0"
                                    Grid.ColumnSpan="4"
                                    Margin="0,10,0,0"
                                    Style="{StaticResource HeaderTextBlock}"
                                    Text="{x:Static localization:Strings.OverrideDefaultSettings}" />
                                <Separator
                                    Grid.Row="8"
                                    Grid.Column="0"
                                    Grid.ColumnSpan="4"
                                    Margin="0,0,0,10"
                                    Background="{DynamicResource MahApps.Brushes.Gray8}" />
                                <CheckBox
                                    Grid.Row="10"
                                    Grid.Column="0"
                                    IsChecked="{Binding PuTTY_OverridePortOrBaud}">
                                    <CheckBox.Style>
                                        <Style
                                            BasedOn="{StaticResource DefaultCheckBox}"
                                            TargetType="{x:Type CheckBox}">
                                            <Setter Property="Content" Value="{x:Static localization:Strings.Port}" />
                                            <Style.Triggers>
                                                <DataTrigger
                                                    Binding="{Binding PuTTY_UseSerial}"
                                                    Value="True">
                                                    <Setter Property="Content" Value="{x:Static localization:Strings.BaudRate}" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </CheckBox.Style>
                                </CheckBox>
                                <TextBox
                                    x:Name="TextBoxPuTTYPort"
                                    Grid.Row="10"
                                    Grid.Column="2"
                                    mah:TextBoxHelper.Watermark="{x:Static localization:StaticStrings.ExamplePort22}"
                                    IsEnabled="{Binding PuTTY_OverridePortOrBaud}"
                                    Visibility="{Binding PuTTY_UseSerial, Converter={StaticResource BooleanReverseToVisibilityCollapsedConverter}}">
                                    <TextBox.Text>
                                        <Binding
                                            Mode="TwoWay"
                                            Path="PuTTY_Port"
                                            UpdateSourceTrigger="PropertyChanged">
                                            <Binding.ValidationRules>
                                                <validators:EmptyValidator ValidatesOnTargetUpdated="True" />
                                                <validators:PortValidator ValidatesOnTargetUpdated="True" />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                                <TextBox
                                    x:Name="TextBoxPuTTYBaud"
                                    Grid.Row="10"
                                    Grid.Column="2"
                                    mah:TextBoxHelper.Watermark="{x:Static localization:StaticStrings.ExampleSerialLine}"
                                    IsEnabled="{Binding PuTTY_OverridePortOrBaud}"
                                    Visibility="{Binding PuTTY_UseSerial, Converter={StaticResource BooleanToVisibilityCollapsedConverter}}">
                                    <TextBox.Text>
                                        <Binding
                                            Mode="TwoWay"
                                            Path="PuTTY_Baud"
                                            UpdateSourceTrigger="PropertyChanged">
                                            <Binding.ValidationRules>
                                                <validators:EmptyValidator ValidatesOnTargetUpdated="True" />
                                                <validators:BaudValidator ValidatesOnTargetUpdated="True" />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                                <CheckBox
                                    Grid.Row="12"
                                    Grid.Column="0"
                                    Content="{x:Static localization:Strings.Username}"
                                    IsChecked="{Binding PuTTY_OverrideUsername}"
                                    Style="{StaticResource DefaultCheckBox}" />
                                <TextBox
                                    x:Name="TextBoxPuTTYUsername"
                                    Grid.Row="12"
                                    Grid.Column="2"
                                    mah:TextBoxHelper.Watermark="{x:Static localization:StaticStrings.ExampleUsername}"
                                    IsEnabled="{Binding PuTTY_OverrideUsername}">
                                    <TextBox.Text>
                                        <Binding
                                            Mode="TwoWay"
                                            Path="PuTTY_Username"
                                            UpdateSourceTrigger="PropertyChanged">
                                            <Binding.ValidationRules>
                                                <validators:EmptyValidator ValidatesOnTargetUpdated="True" />
                                                <validators:NoSpacesValidator ValidatesOnTargetUpdated="True" />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                                <Rectangle
                                    Grid.Row="12"
                                    Grid.Column="3"
                                    Width="24"
                                    Height="24"
                                    Margin="10,0,0,0"
                                    Style="{StaticResource HelpImageRectangle}"
                                    ToolTip="{x:Static localization:Strings.HelpMessage_PuTTYUsername}">
                                    <Rectangle.Resources>
                                        <Style
                                            BasedOn="{StaticResource HelpToolTip}"
                                            TargetType="{x:Type ToolTip}" />
                                    </Rectangle.Resources>
                                </Rectangle>
                                <CheckBox
                                    Grid.Row="14"
                                    Grid.Column="0"
                                    Content="{x:Static localization:Strings.PrivateKeyFile}"
                                    IsChecked="{Binding PuTTY_OverridePrivateKeyFile}"
                                    Style="{StaticResource DefaultCheckBox}" />
                                <TextBox
                                    x:Name="TextBoxPuTTYPrivateKeyFile"
                                    Grid.Row="14"
                                    Grid.Column="2"
                                    mah:TextBoxHelper.Watermark="{x:Static localization:StaticStrings.PrivateKeyFileLocationDots}"
                                    IsEnabled="{Binding PuTTY_OverridePrivateKeyFile}">
                                    <TextBox.Text>
                                        <Binding
                                            Mode="TwoWay"
                                            Path="PuTTY_PrivateKeyFile"
                                            UpdateSourceTrigger="PropertyChanged">
                                            <Binding.ValidationRules>
                                                <validators:FileExistsValidator ValidatesOnTargetUpdated="True" />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                                <Rectangle
                                    Grid.Row="14"
                                    Grid.Column="3"
                                    Width="24"
                                    Height="24"
                                    Margin="10,0,0,0"
                                    Style="{StaticResource HelpImageRectangle}"
                                    ToolTip="{x:Static localization:Strings.HelpMessage_PuTTYPrivateKeyFile}">
                                    <Rectangle.Resources>
                                        <Style
                                            BasedOn="{StaticResource HelpToolTip}"
                                            TargetType="{x:Type ToolTip}" />
                                    </Rectangle.Resources>
                                </Rectangle>
                                <CheckBox
                                    Grid.Row="16"
                                    Grid.Column="0"
                                    mah:TextBoxHelper.Watermark="{x:Static localization:StaticStrings.ExamplePuTTYProfile}"
                                    Content="{x:Static localization:Strings.Profile}"
                                    IsChecked="{Binding PuTTY_OverrideProfile}"
                                    Style="{StaticResource DefaultCheckBox}" />
                                <TextBox
                                    Grid.Row="16"
                                    Grid.Column="2"
                                    IsEnabled="{Binding PuTTY_OverrideProfile}"
                                    Text="{Binding PuTTY_Profile, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                <CheckBox
                                    Grid.Row="18"
                                    Grid.Column="0"
                                    Content="{x:Static localization:Strings.Hostkey}"
                                    IsChecked="{Binding PuTTY_OverrideHostkey}"
                                    Style="{StaticResource DefaultCheckBox}" />
                                <Rectangle
                                    Grid.Row="18"
                                    Grid.Column="3"
                                    Width="24"
                                    Height="24"
                                    Margin="10,0,0,0"
                                    Style="{StaticResource HelpImageRectangle}"
                                    ToolTip="{x:Static localization:Strings.HelpMessage_PuTTYHostkey}">
                                    <Rectangle.Resources>
                                        <Style
                                            BasedOn="{StaticResource HelpToolTip}"
                                            TargetType="{x:Type ToolTip}" />
                                    </Rectangle.Resources>
                                </Rectangle>
                                <TextBox
                                    Grid.Row="18"
                                    Grid.Column="2"
                                    mah:TextBoxHelper.Watermark="{x:Static localization:StaticStrings.ExampleHostkey}"
                                    IsEnabled="{Binding PuTTY_OverrideHostkey}"
                                    Text="{Binding PuTTY_Hostkey, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                <CheckBox
                                    Grid.Row="20"
                                    Grid.Column="0"
                                    Content="{x:Static localization:Strings.EnableLog}"
                                    IsChecked="{Binding PuTTY_OverrideEnableLog}"
                                    Style="{StaticResource DefaultCheckBox}" />
                                <mah:ToggleSwitch
                                    Grid.Row="20"
                                    Grid.Column="2"
                                    IsEnabled="{Binding PuTTY_OverrideEnableLog}"
                                    IsOn="{Binding PuTTY_EnableLog}"
                                    OffContent=""
                                    OnContent="" />
                                <CheckBox
                                    Grid.Row="22"
                                    Grid.Column="0"
                                    Content="{x:Static localization:Strings.LogMode}"
                                    IsChecked="{Binding PuTTY_OverrideLogMode}"
                                    Style="{StaticResource DefaultCheckBox}" />
                                <ComboBox
                                    Grid.Row="22"
                                    Grid.Column="2"
                                    IsEnabled="{Binding PuTTY_OverrideLogMode}"
                                    ItemsSource="{Binding PuTTY_LogModes}"
                                    SelectedItem="{Binding PuTTY_LogMode}">
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock
                                                Style="{StaticResource DefaultTextBlock}"
                                                Text="{Binding Converter={StaticResource PuTTYLogModeToStringConverter}}" />
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>
                                <CheckBox
                                    Grid.Row="24"
                                    Grid.Column="0"
                                    Content="{x:Static localization:Strings.LogPath}"
                                    IsChecked="{Binding PuTTY_OverrideLogPath}"
                                    Style="{StaticResource DefaultCheckBox}" />
                                <TextBox
                                    x:Name="TextBoxPuTTYLogPath"
                                    Grid.Row="24"
                                    Grid.Column="2"
                                    IsEnabled="{Binding PuTTY_OverrideLogPath}">
                                    <TextBox.Text>
                                        <Binding
                                            Mode="TwoWay"
                                            Path="PuTTY_LogPath"
                                            UpdateSourceTrigger="PropertyChanged">
                                            <Binding.ValidationRules>
                                                <validators:EmptyValidator ValidatesOnTargetUpdated="True" />
                                                <validators:DirectoryPathWithEnvironmentVariablesValidator ValidatesOnTargetUpdated="True" />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                                <CheckBox
                                    Grid.Row="26"
                                    Grid.Column="0"
                                    Content="{x:Static localization:Strings.LogFileName}"
                                    IsChecked="{Binding PuTTY_OverrideLogFileName}"
                                    Style="{StaticResource DefaultCheckBox}" />
                                <TextBox
                                    x:Name="TextBoxPuTTYLogFileName"
                                    Grid.Row="26"
                                    Grid.Column="2"
                                    IsEnabled="{Binding PuTTY_OverrideLogFileName}">
                                    <TextBox.Text>
                                        <Binding
                                            Mode="TwoWay"
                                            Path="PuTTY_LogFileName"
                                            UpdateSourceTrigger="PropertyChanged">
                                            <Binding.ValidationRules>
                                                <validators:EmptyValidator ValidatesOnTargetUpdated="True" />
                                                <validators:FileNameValidator ValidatesOnTargetUpdated="True" />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                                <CheckBox
                                    Grid.Row="28"
                                    Grid.Column="0"
                                    Content="{x:Static localization:Strings.AdditionalCommandLine}"
                                    IsChecked="{Binding PuTTY_OverrideAdditionalCommandLine}"
                                    Style="{StaticResource DefaultCheckBox}" />
                                <TextBox
                                    Grid.Row="28"
                                    Grid.Column="2"
                                    IsEnabled="{Binding PuTTY_OverrideAdditionalCommandLine}"
                                    Style="{StaticResource DefaultTextBox}"
                                    Text="{Binding PuTTY_AdditionalCommandLine}" />
                            </Grid>
                        </StackPanel>
                    </ScrollViewer>
                </TabItem>
                <TabItem Header="{x:Static localization:Strings.AWSSessionManager}">
                    <ScrollViewer HorizontalScrollBarVisibility="Disabled">
                        <StackPanel
                            Margin="0,0,0,20"
                            IsEnabled="{Binding AWSSessionManager_Enabled}">
                            <Grid>
                                <Grid.Resources>
                                    <Style
                                        BasedOn="{StaticResource CenterTextBlock}"
                                        TargetType="{x:Type TextBlock}" />
                                    <Style
                                        BasedOn="{StaticResource DefaultTextBox}"
                                        TargetType="{x:Type TextBox}" />
                                </Grid.Resources>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="10" />
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="34" />
                                </Grid.ColumnDefinitions>
                                <TextBlock
                                    Grid.Row="0"
                                    Grid.Column="0"
                                    Text="{x:Static localization:Strings.InstanceId}" />
                                <TextBox
                                    x:Name="TextBoxAwsSessionManagerInstanceId"
                                    Grid.Row="0"
                                    Grid.Column="2"
                                    mah:TextBoxHelper.Watermark="{x:Static localization:StaticStrings.ExampleAWSInstanceId}">
                                    <TextBox.Text>
                                        <Binding
                                            Mode="TwoWay"
                                            Path="AWSSessionManager_InstanceID"
                                            UpdateSourceTrigger="PropertyChanged">
                                            <Binding.ValidationRules>
                                                <validators:EmptyValidator ValidatesOnTargetUpdated="True" />
                                                <validators:NoSpacesValidator ValidatesOnTargetUpdated="True" />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                                <TextBlock
                                    Grid.Row="2"
                                    Grid.Column="0"
                                    Grid.ColumnSpan="4"
                                    Margin="0,10,0,0"
                                    Style="{StaticResource HeaderTextBlock}"
                                    Text="{x:Static localization:Strings.OverrideDefaultSettings}" />
                                <Separator
                                    Grid.Row="4"
                                    Grid.Column="0"
                                    Grid.ColumnSpan="4"
                                    Margin="0,0,0,10"
                                    Background="{DynamicResource MahApps.Brushes.Gray8}" />
                                <CheckBox
                                    Grid.Row="6"
                                    Grid.Column="0"
                                    Content="{x:Static localization:Strings.Profile}"
                                    IsChecked="{Binding AWSSessionManager_OverrideProfile}"
                                    Style="{StaticResource DefaultCheckBox}" />
                                <TextBox
                                    x:Name="TextBoxAwsSessionManagerProfile"
                                    Grid.Row="6"
                                    Grid.Column="2"
                                    mah:TextBoxHelper.Watermark="{x:Static localization:StaticStrings.ExampleAWSProfile}"
                                    IsEnabled="{Binding AWSSessionManager_OverrideProfile}">
                                    <TextBox.Text>
                                        <Binding
                                            Mode="TwoWay"
                                            Path="AWSSessionManager_Profile"
                                            UpdateSourceTrigger="PropertyChanged">
                                            <Binding.ValidationRules>
                                                <validators:EmptyValidator ValidatesOnTargetUpdated="True" />
                                                <validators:NoSpacesValidator ValidatesOnTargetUpdated="True" />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                                <CheckBox
                                    Grid.Row="8"
                                    Grid.Column="0"
                                    Content="{x:Static localization:Strings.Region}"
                                    IsChecked="{Binding AWSSessionManager_OverrideRegion}"
                                    Style="{StaticResource DefaultCheckBox}" />
                                <TextBox
                                    x:Name="TextBoxAwsSessionManagerRegion"
                                    Grid.Row="8"
                                    Grid.Column="2"
                                    mah:TextBoxHelper.Watermark="{x:Static localization:StaticStrings.ExampleAWSRegion}"
                                    IsEnabled="{Binding AWSSessionManager_OverrideRegion}">
                                    <TextBox.Text>
                                        <Binding
                                            Mode="TwoWay"
                                            Path="AWSSessionManager_Region"
                                            UpdateSourceTrigger="PropertyChanged">
                                            <Binding.ValidationRules>
                                                <validators:EmptyValidator ValidatesOnTargetUpdated="True" />
                                                <validators:AWSRegionExistsValidator ValidatesOnTargetUpdated="True" />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                            </Grid>
                        </StackPanel>
                    </ScrollViewer>
                </TabItem>
                <TabItem Header="{x:Static localization:Strings.TigerVNC}">
                    <ScrollViewer HorizontalScrollBarVisibility="Disabled">
                        <StackPanel
                            Margin="0,0,0,20"
                            IsEnabled="{Binding TigerVNC_Enabled}">
                            <Grid>
                                <Grid.Resources>
                                    <Style
                                        BasedOn="{StaticResource CenterTextBlock}"
                                        TargetType="{x:Type TextBlock}" />
                                    <Style
                                        BasedOn="{StaticResource DefaultTextBox}"
                                        TargetType="{x:Type TextBox}" />
                                </Grid.Resources>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="10" />
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="34" />
                                </Grid.ColumnDefinitions>
                                <TextBlock
                                    Grid.Row="0"
                                    Grid.Column="0"
                                    Text="{x:Static localization:Strings.InheritHostFromGeneral}" />
                                <mah:ToggleSwitch
                                    Grid.Row="0"
                                    Grid.Column="2"
                                    IsOn="{Binding TigerVNC_InheritHost}"
                                    OffContent=""
                                    OnContent="" />
                                <TextBlock
                                    Grid.Row="2"
                                    Grid.Column="0"
                                    Text="{x:Static localization:Strings.Host}" />
                                <TextBox
                                    x:Name="TextBoxTigerVncHost"
                                    Grid.Row="2"
                                    Grid.Column="2"
                                    mah:TextBoxHelper.Watermark="{x:Static localization:StaticStrings.ExampleHostnameOrIPAddress}"
                                    IsEnabled="{Binding TigerVNC_InheritHost, Converter={StaticResource BooleanReverseConverter}}">
                                    <TextBox.Style>
                                        <Style
                                            BasedOn="{StaticResource DefaultTextBox}"
                                            TargetType="{x:Type TextBox}">
                                            <Style.Triggers>
                                                <DataTrigger
                                                    Binding="{Binding TigerVNC_InheritHost}"
                                                    Value="True">
                                                    <Setter Property="TextBox.Text">
                                                        <Setter.Value>
                                                            <Binding
                                                                Mode="TwoWay"
                                                                Path="Host"
                                                                UpdateSourceTrigger="PropertyChanged" />
                                                        </Setter.Value>
                                                    </Setter>
                                                </DataTrigger>
                                                <DataTrigger
                                                    Binding="{Binding TigerVNC_InheritHost}"
                                                    Value="False">
                                                    <Setter Property="TextBox.Text">
                                                        <Setter.Value>
                                                            <Binding
                                                                Mode="TwoWay"
                                                                Path="TigerVNC_Host"
                                                                UpdateSourceTrigger="PropertyChanged">
                                                                <Binding.ValidationRules>
                                                                    <validators:EmptyValidator ValidatesOnTargetUpdated="True" />
                                                                    <validators:IPAddressOrHostnameValidator ValidatesOnTargetUpdated="True" />
                                                                </Binding.ValidationRules>
                                                            </Binding>
                                                        </Setter.Value>
                                                    </Setter>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBox.Style>
                                </TextBox>
                                <TextBlock
                                    Grid.Row="4"
                                    Grid.Column="0"
                                    Grid.ColumnSpan="4"
                                    Margin="0,10,0,0"
                                    Style="{StaticResource HeaderTextBlock}"
                                    Text="{x:Static localization:Strings.OverrideDefaultSettings}" />
                                <Separator
                                    Grid.Row="6"
                                    Grid.Column="0"
                                    Grid.ColumnSpan="4"
                                    Margin="0,0,0,10"
                                    Background="{DynamicResource MahApps.Brushes.Gray8}" />
                                <CheckBox
                                    Grid.Row="8"
                                    Grid.Column="0"
                                    Content="{x:Static localization:Strings.Port}"
                                    IsChecked="{Binding TigerVNC_OverridePort}"
                                    Style="{StaticResource DefaultCheckBox}" />
                                <TextBox
                                    x:Name="TextBoxTigerVncPort"
                                    Grid.Row="8"
                                    Grid.Column="2"
                                    mah:TextBoxHelper.Watermark="{x:Static localization:StaticStrings.ExamplePort5900}"
                                    IsEnabled="{Binding TigerVNC_OverridePort}">
                                    <TextBox.Text>
                                        <Binding
                                            Mode="TwoWay"
                                            Path="TigerVNC_Port"
                                            UpdateSourceTrigger="PropertyChanged">
                                            <Binding.ValidationRules>
                                                <validators:PortValidator ValidatesOnTargetUpdated="True" />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                            </Grid>
                        </StackPanel>
                    </ScrollViewer>
                </TabItem>
                <TabItem Header="{x:Static localization:Strings.WebConsole}">
                    <ScrollViewer HorizontalScrollBarVisibility="Disabled">
                        <StackPanel
                            Margin="0,0,0,20"
                            IsEnabled="{Binding WebConsole_Enabled}">
                            <Grid>
                                <Grid.Resources>
                                    <Style
                                        BasedOn="{StaticResource CenterTextBlock}"
                                        TargetType="{x:Type TextBlock}" />
                                    <Style
                                        BasedOn="{StaticResource DefaultTextBox}"
                                        TargetType="{x:Type TextBox}" />
                                </Grid.Resources>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="10" />
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="34" />
                                </Grid.ColumnDefinitions>
                                <TextBlock
                                    Grid.Row="0"
                                    Grid.Column="0"
                                    Text="{x:Static localization:Strings.URL}" />
                                <TextBox
                                    x:Name="TextBoxWebConsoleUrl"
                                    Grid.Row="0"
                                    Grid.Column="2"
                                    mah:TextBoxHelper.Watermark="{x:Static localization:StaticStrings.ExampleWebsiteUri}">
                                    <TextBox.Text>
                                        <Binding
                                            Mode="TwoWay"
                                            Path="WebConsole_Url"
                                            UpdateSourceTrigger="PropertyChanged">
                                            <Binding.ValidationRules>
                                                <validators:EmptyValidator ValidatesOnTargetUpdated="True" />
                                                <validators:HttpAndHttpsUriValidator ValidatesOnTargetUpdated="True" />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                            </Grid>
                        </StackPanel>
                    </ScrollViewer>
                </TabItem>
                <TabItem Header="{x:Static localization:Strings.SNMP}">
                    <ScrollViewer HorizontalScrollBarVisibility="Disabled">
                        <StackPanel IsEnabled="{Binding SNMP_Enabled}">
                            <Grid>
                                <Grid.Resources>
                                    <Style
                                        BasedOn="{StaticResource CenterTextBlock}"
                                        TargetType="{x:Type TextBlock}" />
                                    <Style
                                        BasedOn="{StaticResource DefaultTextBox}"
                                        TargetType="{x:Type TextBox}" />
                                </Grid.Resources>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="10" />
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="34" />
                                </Grid.ColumnDefinitions>
                                <TextBlock
                                    Grid.Row="0"
                                    Grid.Column="0"
                                    Text="{x:Static localization:Strings.InheritHostFromGeneral}" />
                                <mah:ToggleSwitch
                                    Grid.Row="0"
                                    Grid.Column="2"
                                    IsOn="{Binding SNMP_InheritHost}"
                                    OffContent=""
                                    OnContent="" />
                                <TextBlock
                                    Grid.Row="2"
                                    Grid.Column="0"
                                    Text="{x:Static localization:Strings.Host}" />
                                <TextBox
                                    x:Name="TextBoxSnmpHost"
                                    Grid.Row="2"
                                    Grid.Column="2"
                                    mah:TextBoxHelper.Watermark="{x:Static localization:StaticStrings.ExampleHostnameAndOrIPAddress}"
                                    IsEnabled="{Binding SNMP_InheritHost, Converter={StaticResource BooleanReverseConverter}}">
                                    <TextBox.Style>
                                        <Style
                                            BasedOn="{StaticResource DefaultTextBox}"
                                            TargetType="{x:Type TextBox}">
                                            <Style.Triggers>
                                                <DataTrigger
                                                    Binding="{Binding SNMP_InheritHost}"
                                                    Value="True">
                                                    <Setter Property="TextBox.Text">
                                                        <Setter.Value>
                                                            <Binding
                                                                Mode="TwoWay"
                                                                Path="Host"
                                                                UpdateSourceTrigger="PropertyChanged" />
                                                        </Setter.Value>
                                                    </Setter>
                                                </DataTrigger>
                                                <DataTrigger
                                                    Binding="{Binding SNMP_InheritHost}"
                                                    Value="False">
                                                    <Setter Property="TextBox.Text">
                                                        <Setter.Value>
                                                            <Binding
                                                                Mode="TwoWay"
                                                                Path="SNMP_Host"
                                                                UpdateSourceTrigger="PropertyChanged">
                                                                <Binding.ValidationRules>
                                                                    <validators:EmptyValidator ValidatesOnTargetUpdated="True" />
                                                                    <validators:IPAddressOrHostnameAsRangeValidator ValidatesOnTargetUpdated="True" />
                                                                </Binding.ValidationRules>
                                                            </Binding>
                                                        </Setter.Value>
                                                    </Setter>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBox.Style>
                                </TextBox>
                                <TextBlock
                                    Grid.Row="4"
                                    Grid.Column="0"
                                    Grid.ColumnSpan="4"
                                    Margin="0,10,0,0"
                                    Style="{StaticResource HeaderTextBlock}"
                                    Text="{x:Static localization:Strings.OverrideDefaultSettings}" />
                                <Separator
                                    Grid.Row="6"
                                    Grid.Column="0"
                                    Grid.ColumnSpan="4"
                                    Margin="0,0,0,10"
                                    Background="{DynamicResource MahApps.Brushes.Gray8}" />
                                <CheckBox
                                    Grid.Row="8"
                                    Grid.Column="0"
                                    Content="{x:Static localization:Strings.OID}"
                                    IsChecked="{Binding SNMP_OverrideOIDAndMode}"
                                    Style="{StaticResource DefaultCheckBox}" />
                                <TextBox
                                    x:Name="TextBoxSnmpoid"
                                    Grid.Row="8"
                                    Grid.Column="2"
                                    IsEnabled="{Binding SNMP_OverrideOIDAndMode}">
                                    <TextBox.Resources>
                                        <wpfHelpers:BindingProxy
                                            x:Key="BindingProxy"
                                            Data="{Binding}" />
                                    </TextBox.Resources>
                                    <TextBox.Style>
                                        <Style
                                            BasedOn="{StaticResource DefaultTextBox}"
                                            TargetType="{x:Type TextBox}">
                                            <Setter Property="mah:TextBoxHelper.Watermark" Value="{x:Static localization:StaticStrings.ExampleSnmpOid}" />
                                            <Style.Triggers>
                                                <DataTrigger
                                                    Binding="{Binding Path=SNMP_Mode}"
                                                    Value="Get">
                                                    <Setter Property="mah:TextBoxHelper.Watermark" Value="{x:Static localization:StaticStrings.ExampleSnmpOids}" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBox.Style>
                                    <TextBox.Text>
                                        <Binding
                                            Mode="TwoWay"
                                            Path="SNMP_OID"
                                            UpdateSourceTrigger="PropertyChanged">
                                            <Binding.ValidationRules>
                                                <validators:EmptyValidator ValidatesOnTargetUpdated="True" />
                                                <validators:SNMPOIDValidator ValidatesOnTargetUpdated="True">
                                                    <validators:SNMPOIDValidator.Wrapper>
                                                        <validators:SNMPOIDDependencyObjectWrapper Mode="{Binding Data.SNMP_Mode, Source={StaticResource BindingProxy}}" />
                                                    </validators:SNMPOIDValidator.Wrapper>
                                                </validators:SNMPOIDValidator>
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                                <TextBlock
                                    Grid.Row="10"
                                    Grid.Column="0"
                                    Margin="24,0,0,0"
                                    VerticalAlignment="Center"
                                    Style="{StaticResource DisabledTextBlock}"
                                    Text="{x:Static localization:Strings.Mode}" />
                                <ComboBox
                                    Grid.Row="10"
                                    Grid.Column="2"
                                    IsEnabled="{Binding SNMP_OverrideOIDAndMode}"
                                    ItemsSource="{Binding SNMP_Modes}"
                                    SelectedItem="{Binding SNMP_Mode}" />
                                <CheckBox
                                    Grid.Row="12"
                                    Grid.Column="0"
                                    Content="{x:Static localization:Strings.Version}"
                                    IsChecked="{Binding SNMP_OverrideVersionAndAuth}"
                                    Style="{StaticResource DefaultCheckBox}" />
                                <ComboBox
                                    Grid.Row="12"
                                    Grid.Column="2"
                                    IsEnabled="{Binding SNMP_OverrideVersionAndAuth}"
                                    ItemsSource="{Binding SNMP_Versions}"
                                    SelectedItem="{Binding SNMP_Version}" />
                                <TextBlock
                                    Grid.Row="14"
                                    Grid.Column="0"
                                    Margin="24,0,0,0"
                                    VerticalAlignment="Center"
                                    Text="{x:Static localization:Strings.Community}">
                                    <TextBlock.Style>
                                        <Style
                                            BasedOn="{StaticResource DisabledTextBlock}"
                                            TargetType="{x:Type TextBlock}">
                                            <Style.Triggers>
                                                <DataTrigger
                                                    Binding="{Binding SNMP_Version}"
                                                    Value="V3">
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                                <PasswordBox
                                    x:Name="PasswordBoxSnmpCommunity"
                                    Grid.Row="14"
                                    Grid.Column="2"
                                    IsEnabled="{Binding SNMP_OverrideVersionAndAuth}">
                                    <PasswordBox.Style>
                                        <Style
                                            BasedOn="{StaticResource DefaultPasswordBox}"
                                            TargetType="{x:Type PasswordBox}">
                                            <Setter Property="mah:TextBoxHelper.Watermark" Value="{x:Static localization:Strings.NotChanged}" />
                                            <Style.Triggers>
                                                <DataTrigger
                                                    Binding="{Binding SNMP_IsCommunityEmpty}"
                                                    Value="True">
                                                    <Setter Property="mah:TextBoxHelper.Watermark" Value="{x:Static localization:StaticStrings.ExampleSNMPCommunity}" />
                                                </DataTrigger>
                                                <DataTrigger
                                                    Binding="{Binding SNMP_Version}"
                                                    Value="V3">
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </PasswordBox.Style>
                                    <interactivity:Interaction.Behaviors>
                                        <wpfHelpers:PasswordBoxBindingBehavior Password="{Binding SNMP_Community, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    </interactivity:Interaction.Behaviors>
                                </PasswordBox>
                                <Rectangle
                                    Grid.Row="14"
                                    Grid.Column="3"
                                    Width="24"
                                    Height="24"
                                    Margin="10,0,0,0"
                                    ToolTip="{x:Static localization:Strings.WarningMessage_ProfileFileNotEncryptedStoringPasswords}">
                                    <Rectangle.Style>
                                        <Style
                                            BasedOn="{StaticResource WarnImageRectangle}"
                                            TargetType="{x:Type Rectangle}">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                            <Style.Triggers>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding SNMP_Version}" Value="V1" />
                                                        <Condition Binding="{Binding IsProfileFileEncrypted}" Value="False" />
                                                    </MultiDataTrigger.Conditions>
                                                    <MultiDataTrigger.Setters>
                                                        <Setter Property="Visibility" Value="Visible" />
                                                    </MultiDataTrigger.Setters>
                                                </MultiDataTrigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding SNMP_Version}" Value="V2C" />
                                                        <Condition Binding="{Binding IsProfileFileEncrypted}" Value="False" />
                                                    </MultiDataTrigger.Conditions>
                                                    <MultiDataTrigger.Setters>
                                                        <Setter Property="Visibility" Value="Visible" />
                                                    </MultiDataTrigger.Setters>
                                                </MultiDataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Rectangle.Style>
                                    <Rectangle.Resources>
                                        <Style
                                            BasedOn="{StaticResource HelpToolTip}"
                                            TargetType="{x:Type ToolTip}" />
                                    </Rectangle.Resources>
                                </Rectangle>
                                <TextBlock
                                    Grid.Row="16"
                                    Grid.Column="0"
                                    Margin="24,0,0,0"
                                    VerticalAlignment="Center"
                                    Text="{x:Static localization:Strings.Security}">
                                    <TextBlock.Style>
                                        <Style
                                            BasedOn="{StaticResource DisabledTextBlock}"
                                            TargetType="{x:Type TextBlock}">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                            <Style.Triggers>
                                                <DataTrigger
                                                    Binding="{Binding SNMP_Version}"
                                                    Value="V3">
                                                    <Setter Property="Visibility" Value="Visible" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                                <ComboBox
                                    Grid.Row="16"
                                    Grid.Column="2"
                                    IsEnabled="{Binding SNMP_OverrideVersionAndAuth}"
                                    ItemsSource="{Binding SNMP_Securities}"
                                    SelectedItem="{Binding SNMP_Security}">
                                    <ComboBox.Style>
                                        <Style
                                            BasedOn="{StaticResource DefaultComboBox}"
                                            TargetType="{x:Type ComboBox}">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                            <Style.Triggers>
                                                <DataTrigger
                                                    Binding="{Binding SNMP_Version}"
                                                    Value="V3">
                                                    <Setter Property="Visibility" Value="Visible" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ComboBox.Style>
                                </ComboBox>
                                <TextBlock
                                    Grid.Row="18"
                                    Grid.Column="0"
                                    Margin="24,0,0,0"
                                    VerticalAlignment="Center"
                                    Text="{x:Static localization:Strings.Username}">
                                    <TextBlock.Style>
                                        <Style
                                            BasedOn="{StaticResource DisabledTextBlock}"
                                            TargetType="{x:Type TextBlock}">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                            <Style.Triggers>
                                                <DataTrigger
                                                    Binding="{Binding SNMP_Version}"
                                                    Value="V3">
                                                    <Setter Property="Visibility" Value="Visible" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                                <TextBox
                                    x:Name="TextBoxSnmpUsername"
                                    Grid.Row="18"
                                    Grid.Column="2"
                                    mah:TextBoxHelper.Watermark="{x:Static localization:StaticStrings.ExampleUsername}"
                                    IsEnabled="{Binding SNMP_OverrideVersionAndAuth}">
                                    <TextBox.Style>
                                        <Style
                                            BasedOn="{StaticResource DefaultTextBox}"
                                            TargetType="{x:Type TextBox}">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                            <Style.Triggers>
                                                <DataTrigger
                                                    Binding="{Binding SNMP_Version}"
                                                    Value="V3">
                                                    <Setter Property="Visibility" Value="Visible" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBox.Style>
                                    <TextBox.Text>
                                        <Binding
                                            Mode="TwoWay"
                                            Path="SNMP_Username"
                                            UpdateSourceTrigger="PropertyChanged">
                                            <Binding.ValidationRules>
                                                <validators:EmptyValidator ValidatesOnTargetUpdated="True" />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                                <TextBlock
                                    Grid.Row="20"
                                    Grid.Column="0"
                                    Margin="24,0,0,0"
                                    VerticalAlignment="Center"
                                    Text="{x:Static localization:Strings.Auth}">
                                    <TextBlock.Style>
                                        <Style
                                            BasedOn="{StaticResource DisabledTextBlock}"
                                            TargetType="{x:Type TextBlock}">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                            <Style.Triggers>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding SNMP_Version}" Value="V3" />
                                                        <Condition Binding="{Binding SNMP_Security}" Value="AuthNoPriv" />
                                                    </MultiDataTrigger.Conditions>
                                                    <MultiDataTrigger.Setters>
                                                        <Setter Property="Visibility" Value="Visible" />
                                                    </MultiDataTrigger.Setters>
                                                </MultiDataTrigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding SNMP_Version}" Value="V3" />
                                                        <Condition Binding="{Binding SNMP_Security}" Value="AuthPriv" />
                                                    </MultiDataTrigger.Conditions>
                                                    <MultiDataTrigger.Setters>
                                                        <Setter Property="Visibility" Value="Visible" />
                                                    </MultiDataTrigger.Setters>
                                                </MultiDataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                                <ComboBox
                                    Grid.Row="20"
                                    Grid.Column="2"
                                    IsEnabled="{Binding SNMP_OverrideVersionAndAuth}"
                                    ItemsSource="{Binding SNMP_AuthenticationProviders}"
                                    SelectedItem="{Binding SNMP_AuthenticationProvider}">
                                    <ComboBox.Style>
                                        <Style
                                            BasedOn="{StaticResource DefaultComboBox}"
                                            TargetType="{x:Type ComboBox}">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                            <Style.Triggers>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding SNMP_Version}" Value="V3" />
                                                        <Condition Binding="{Binding SNMP_Security}" Value="AuthNoPriv" />
                                                    </MultiDataTrigger.Conditions>
                                                    <MultiDataTrigger.Setters>
                                                        <Setter Property="Visibility" Value="Visible" />
                                                    </MultiDataTrigger.Setters>
                                                </MultiDataTrigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding SNMP_Version}" Value="V3" />
                                                        <Condition Binding="{Binding SNMP_Security}" Value="AuthPriv" />
                                                    </MultiDataTrigger.Conditions>
                                                    <MultiDataTrigger.Setters>
                                                        <Setter Property="Visibility" Value="Visible" />
                                                    </MultiDataTrigger.Setters>
                                                </MultiDataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ComboBox.Style>
                                </ComboBox>
                                <PasswordBox
                                    x:Name="PasswordBoxSnmpAuth"
                                    Grid.Row="22"
                                    Grid.Column="2"
                                    IsEnabled="{Binding SNMP_OverrideVersionAndAuth}">
                                    <PasswordBox.Style>
                                        <Style
                                            BasedOn="{StaticResource DefaultPasswordBox}"
                                            TargetType="{x:Type PasswordBox}">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                            <Setter Property="mah:TextBoxHelper.Watermark" Value="{x:Static localization:Strings.NotChanged}" />
                                            <Style.Triggers>
                                                <DataTrigger
                                                    Binding="{Binding SNMP_IsAuthEmpty}"
                                                    Value="True">
                                                    <Setter Property="mah:TextBoxHelper.Watermark" Value="{x:Static localization:StaticStrings.ExampleSNMPAuthSecret}" />
                                                </DataTrigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding SNMP_Version}" Value="V3" />
                                                        <Condition Binding="{Binding SNMP_Security}" Value="AuthNoPriv" />
                                                    </MultiDataTrigger.Conditions>
                                                    <MultiDataTrigger.Setters>
                                                        <Setter Property="Visibility" Value="Visible" />
                                                    </MultiDataTrigger.Setters>
                                                </MultiDataTrigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding SNMP_Version}" Value="V3" />
                                                        <Condition Binding="{Binding SNMP_Security}" Value="AuthPriv" />
                                                    </MultiDataTrigger.Conditions>
                                                    <MultiDataTrigger.Setters>
                                                        <Setter Property="Visibility" Value="Visible" />
                                                    </MultiDataTrigger.Setters>
                                                </MultiDataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </PasswordBox.Style>
                                    <interactivity:Interaction.Behaviors>
                                        <wpfHelpers:PasswordBoxBindingBehavior Password="{Binding SNMP_Auth, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    </interactivity:Interaction.Behaviors>
                                </PasswordBox>
                                <Rectangle
                                    Grid.Row="22"
                                    Grid.Column="3"
                                    Width="24"
                                    Height="24"
                                    Margin="10,0,0,0"
                                    ToolTip="{x:Static localization:Strings.WarningMessage_ProfileFileNotEncryptedStoringPasswords}">
                                    <Rectangle.Style>
                                        <Style
                                            BasedOn="{StaticResource WarnImageRectangle}"
                                            TargetType="{x:Type Rectangle}">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                            <Style.Triggers>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding SNMP_Version}" Value="V3" />
                                                        <Condition Binding="{Binding SNMP_Security}" Value="AuthNoPriv" />
                                                        <Condition Binding="{Binding IsProfileFileEncrypted}" Value="False" />
                                                    </MultiDataTrigger.Conditions>
                                                    <MultiDataTrigger.Setters>
                                                        <Setter Property="Visibility" Value="Visible" />
                                                    </MultiDataTrigger.Setters>
                                                </MultiDataTrigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding SNMP_Version}" Value="V3" />
                                                        <Condition Binding="{Binding SNMP_Security}" Value="AuthPriv" />
                                                        <Condition Binding="{Binding IsProfileFileEncrypted}" Value="False" />
                                                    </MultiDataTrigger.Conditions>
                                                    <MultiDataTrigger.Setters>
                                                        <Setter Property="Visibility" Value="Visible" />
                                                    </MultiDataTrigger.Setters>
                                                </MultiDataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Rectangle.Style>
                                    <Rectangle.Resources>
                                        <Style
                                            BasedOn="{StaticResource HelpToolTip}"
                                            TargetType="{x:Type ToolTip}" />
                                    </Rectangle.Resources>
                                </Rectangle>
                                <TextBlock
                                    Grid.Row="24"
                                    Grid.Column="0"
                                    Margin="24,0,0,0"
                                    VerticalAlignment="Center"
                                    Text="{x:Static localization:Strings.Priv}">
                                    <TextBlock.Style>
                                        <Style
                                            BasedOn="{StaticResource DisabledTextBlock}"
                                            TargetType="{x:Type TextBlock}">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                            <Style.Triggers>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding SNMP_Version}" Value="V3" />
                                                        <Condition Binding="{Binding SNMP_Security}" Value="AuthPriv" />
                                                    </MultiDataTrigger.Conditions>
                                                    <MultiDataTrigger.Setters>
                                                        <Setter Property="Visibility" Value="Visible" />
                                                    </MultiDataTrigger.Setters>
                                                </MultiDataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                                <ComboBox
                                    Grid.Row="24"
                                    Grid.Column="2"
                                    IsEnabled="{Binding SNMP_OverrideVersionAndAuth}"
                                    ItemsSource="{Binding SNMP_PrivacyProviders}"
                                    SelectedItem="{Binding SNMP_PrivacyProvider}">
                                    <ComboBox.Style>
                                        <Style
                                            BasedOn="{StaticResource DefaultComboBox}"
                                            TargetType="{x:Type ComboBox}">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                            <Style.Triggers>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding SNMP_Version}" Value="V3" />
                                                        <Condition Binding="{Binding SNMP_Security}" Value="AuthPriv" />
                                                    </MultiDataTrigger.Conditions>
                                                    <MultiDataTrigger.Setters>
                                                        <Setter Property="Visibility" Value="Visible" />
                                                    </MultiDataTrigger.Setters>
                                                </MultiDataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ComboBox.Style>
                                </ComboBox>
                                <PasswordBox
                                    x:Name="PasswordBoxSnmpPriv"
                                    Grid.Row="26"
                                    Grid.Column="2"
                                    IsEnabled="{Binding SNMP_OverrideVersionAndAuth}">
                                    <PasswordBox.Style>
                                        <Style
                                            BasedOn="{StaticResource DefaultPasswordBox}"
                                            TargetType="{x:Type PasswordBox}">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                            <Setter Property="mah:TextBoxHelper.Watermark" Value="{x:Static localization:Strings.NotChanged}" />
                                            <Style.Triggers>
                                                <DataTrigger
                                                    Binding="{Binding SNMP_IsPrivEmpty}"
                                                    Value="True">
                                                    <Setter Property="mah:TextBoxHelper.Watermark" Value="{x:Static localization:StaticStrings.ExampleSNMPPrivSecret}" />
                                                </DataTrigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding SNMP_Version}" Value="V3" />
                                                        <Condition Binding="{Binding SNMP_Security}" Value="AuthPriv" />
                                                    </MultiDataTrigger.Conditions>
                                                    <MultiDataTrigger.Setters>
                                                        <Setter Property="Visibility" Value="Visible" />
                                                    </MultiDataTrigger.Setters>
                                                </MultiDataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </PasswordBox.Style>
                                    <interactivity:Interaction.Behaviors>
                                        <wpfHelpers:PasswordBoxBindingBehavior Password="{Binding SNMP_Priv, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    </interactivity:Interaction.Behaviors>
                                </PasswordBox>
                                <Rectangle
                                    Grid.Row="26"
                                    Grid.Column="3"
                                    Width="24"
                                    Height="24"
                                    Margin="10,0,0,0"
                                    ToolTip="{x:Static localization:Strings.WarningMessage_ProfileFileNotEncryptedStoringPasswords}">
                                    <Rectangle.Style>
                                        <Style
                                            BasedOn="{StaticResource WarnImageRectangle}"
                                            TargetType="{x:Type Rectangle}">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                            <Style.Triggers>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding SNMP_Version}" Value="V3" />
                                                        <Condition Binding="{Binding SNMP_Security}" Value="AuthPriv" />
                                                        <Condition Binding="{Binding IsProfileFileEncrypted}" Value="False" />
                                                    </MultiDataTrigger.Conditions>
                                                    <MultiDataTrigger.Setters>
                                                        <Setter Property="Visibility" Value="Visible" />
                                                    </MultiDataTrigger.Setters>
                                                </MultiDataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Rectangle.Style>
                                    <Rectangle.Resources>
                                        <Style
                                            BasedOn="{StaticResource HelpToolTip}"
                                            TargetType="{x:Type ToolTip}" />
                                    </Rectangle.Resources>
                                </Rectangle>
                            </Grid>
                        </StackPanel>
                    </ScrollViewer>
                </TabItem>
                <TabItem Header="{x:Static localization:Strings.WakeOnLAN}">
                    <ScrollViewer HorizontalScrollBarVisibility="Disabled">
                        <StackPanel
                            Margin="0,0,0,20"
                            IsEnabled="{Binding WakeOnLAN_Enabled}">
                            <Grid>
                                <Grid.Resources>
                                    <Style
                                        BasedOn="{StaticResource CenterTextBlock}"
                                        TargetType="{x:Type TextBlock}" />
                                    <Style
                                        BasedOn="{StaticResource DefaultTextBox}"
                                        TargetType="{x:Type TextBox}" />
                                </Grid.Resources>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="10" />
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="34" />
                                </Grid.ColumnDefinitions>
                                <TextBlock
                                    Grid.Row="0"
                                    Grid.Column="0"
                                    Text="{x:Static localization:Strings.MACAddress}" />
                                <TextBox
                                    x:Name="TextBoxWakeOnLanMacAddress"
                                    Grid.Row="0"
                                    Grid.Column="2"
                                    mah:TextBoxHelper.Watermark="{x:Static localization:StaticStrings.ExampleMACAddress}">
                                    <TextBox.Text>
                                        <Binding
                                            Mode="TwoWay"
                                            Path="WakeOnLAN_MACAddress"
                                            UpdateSourceTrigger="PropertyChanged">
                                            <Binding.ValidationRules>
                                                <validators:EmptyValidator ValidatesOnTargetUpdated="True" />
                                                <validators:MACAddressValidator ValidatesOnTargetUpdated="True" />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                                <TextBlock
                                    Grid.Row="2"
                                    Grid.Column="0"
                                    Text="{x:Static localization:Strings.Broadcast}" />
                                <TextBox
                                    x:Name="TextBoxWakeOnLanBroadcast"
                                    Grid.Row="2"
                                    Grid.Column="2"
                                    mah:TextBoxHelper.Watermark="{x:Static localization:StaticStrings.ExampleIPv4Broadcast}">
                                    <TextBox.Text>
                                        <Binding
                                            Mode="TwoWay"
                                            Path="WakeOnLAN_Broadcast"
                                            UpdateSourceTrigger="PropertyChanged">
                                            <Binding.ValidationRules>
                                                <validators:EmptyValidator ValidatesOnTargetUpdated="True" />
                                                <validators:IPv4AddressValidator ValidatesOnTargetUpdated="True" />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                            </Grid>
                        </StackPanel>
                    </ScrollViewer>
                </TabItem>
                <TabItem Header="{x:Static localization:Strings.Whois}">
                    <ScrollViewer HorizontalScrollBarVisibility="Disabled">
                        <StackPanel IsEnabled="{Binding Whois_Enabled}">
                            <Grid>
                                <Grid.Resources>
                                    <Style
                                        BasedOn="{StaticResource CenterTextBlock}"
                                        TargetType="{x:Type TextBlock}" />
                                    <Style
                                        BasedOn="{StaticResource DefaultTextBox}"
                                        TargetType="{x:Type TextBox}" />
                                </Grid.Resources>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="10" />
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="34" />
                                </Grid.ColumnDefinitions>
                                <TextBlock
                                    Grid.Row="0"
                                    Grid.Column="0"
                                    Text="{x:Static localization:Strings.InheritHostFromGeneral}" />
                                <mah:ToggleSwitch
                                    Grid.Row="0"
                                    Grid.Column="2"
                                    IsOn="{Binding Whois_InheritHost}"
                                    OffContent=""
                                    OnContent="" />
                                <TextBlock
                                    Grid.Row="2"
                                    Grid.Column="0"
                                    Text="{x:Static localization:Strings.Domain}" />
                                <TextBox
                                    x:Name="TextBoxWhoisDomain"
                                    Grid.Row="2"
                                    Grid.Column="2"
                                    mah:TextBoxHelper.Watermark="{x:Static localization:StaticStrings.ExampleDomain}"
                                    IsEnabled="{Binding Whois_InheritHost, Converter={StaticResource BooleanReverseConverter}}">
                                    <TextBox.Style>
                                        <Style
                                            BasedOn="{StaticResource DefaultTextBox}"
                                            TargetType="{x:Type TextBox}">
                                            <Style.Triggers>
                                                <DataTrigger
                                                    Binding="{Binding Whois_InheritHost}"
                                                    Value="True">
                                                    <Setter Property="TextBox.Text">
                                                        <Setter.Value>
                                                            <Binding
                                                                Mode="TwoWay"
                                                                Path="Host"
                                                                UpdateSourceTrigger="PropertyChanged" />
                                                        </Setter.Value>
                                                    </Setter>
                                                </DataTrigger>
                                                <DataTrigger
                                                    Binding="{Binding Whois_InheritHost}"
                                                    Value="False">
                                                    <Setter Property="TextBox.Text">
                                                        <Setter.Value>
                                                            <Binding
                                                                Mode="TwoWay"
                                                                Path="Whois_Domain"
                                                                UpdateSourceTrigger="PropertyChanged">
                                                                <Binding.ValidationRules>
                                                                    <validators:EmptyValidator ValidatesOnTargetUpdated="True" />
                                                                    <validators:DomainValidator ValidatesOnTargetUpdated="True" />
                                                                </Binding.ValidationRules>
                                                            </Binding>
                                                        </Setter.Value>
                                                    </Setter>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBox.Style>
                                </TextBox>
                            </Grid>
                        </StackPanel>
                    </ScrollViewer>
                </TabItem>
                <TabItem Header="{x:Static localization:Strings.IPGeolocation}">
                    <ScrollViewer HorizontalScrollBarVisibility="Disabled">
                        <StackPanel IsEnabled="{Binding IPGeolocation_Enabled}">
                            <Grid>
                                <Grid.Resources>
                                    <Style
                                        BasedOn="{StaticResource CenterTextBlock}"
                                        TargetType="{x:Type TextBlock}" />
                                    <Style
                                        BasedOn="{StaticResource DefaultTextBox}"
                                        TargetType="{x:Type TextBox}" />
                                </Grid.Resources>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="10" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="10" />
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="34" />
                                </Grid.ColumnDefinitions>
                                <TextBlock
                                    Grid.Row="0"
                                    Grid.Column="0"
                                    Text="{x:Static localization:Strings.InheritHostFromGeneral}" />
                                <mah:ToggleSwitch
                                    Grid.Row="0"
                                    Grid.Column="2"
                                    IsOn="{Binding IPGeolocation_InheritHost}"
                                    OffContent=""
                                    OnContent="" />
                                <TextBlock
                                    Grid.Row="2"
                                    Grid.Column="0"
                                    Text="{x:Static localization:Strings.Host}" />
                                <TextBox
                                    x:Name="TextBoxIPGeolocationHost"
                                    Grid.Row="2"
                                    Grid.Column="2"
                                    mah:TextBoxHelper.Watermark="{x:Static localization:StaticStrings.ExampleFqdnOrIPAddressPublic}"
                                    IsEnabled="{Binding IPGeolocation_InheritHost, Converter={StaticResource BooleanReverseConverter}}">
                                    <TextBox.Style>
                                        <Style
                                            BasedOn="{StaticResource DefaultTextBox}"
                                            TargetType="{x:Type TextBox}">
                                            <Style.Triggers>
                                                <DataTrigger
                                                    Binding="{Binding IPGeolocation_InheritHost}"
                                                    Value="True">
                                                    <Setter Property="TextBox.Text">
                                                        <Setter.Value>
                                                            <Binding
                                                                Mode="TwoWay"
                                                                Path="Host"
                                                                UpdateSourceTrigger="PropertyChanged" />
                                                        </Setter.Value>
                                                    </Setter>
                                                </DataTrigger>
                                                <DataTrigger
                                                    Binding="{Binding IPGeolocation_InheritHost}"
                                                    Value="False">
                                                    <Setter Property="TextBox.Text">
                                                        <Setter.Value>
                                                            <Binding
                                                                Mode="TwoWay"
                                                                Path="IPGeolocation_Host"
                                                                UpdateSourceTrigger="PropertyChanged">
                                                                <Binding.ValidationRules>
                                                                    <validators:EmptyValidator ValidatesOnTargetUpdated="True" />
                                                                    <validators:IPAddressOrHostnameValidator ValidatesOnTargetUpdated="True" />
                                                                </Binding.ValidationRules>
                                                            </Binding>
                                                        </Setter.Value>
                                                    </Setter>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBox.Style>
                                </TextBox>
                            </Grid>
                        </StackPanel>
                    </ScrollViewer>
                </TabItem>
            </TabControl>
        </Grid>
        <StackPanel
            Grid.Row="2"
            HorizontalAlignment="Right"
            Orientation="Horizontal">
            <Button
                Margin="0,0,10,0"
                Command="{Binding SaveCommand}"
                Content="{x:Static localization:Strings.Save}"
                IsDefault="True">
                <Button.Style>
                    <Style
                        BasedOn="{StaticResource HighlightedButton}"
                        TargetType="{x:Type Button}">
                        <Style.Triggers>
                            <!--  General  -->
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding ElementName=TextBoxName, Path=(Validation.HasError)}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="IsEnabled" Value="False" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding ElementName=TextBoxHost, Path=(Validation.HasError)}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="IsEnabled" Value="False" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding ElementName=ComboBoxGroup, Path=(Validation.HasError)}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="IsEnabled" Value="False" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <!--  Network Interface  -->
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding NetworkInterface_Enabled}" Value="True" />
                                    <Condition Binding="{Binding NetworkInterface_EnableStaticIPAddress}" Value="True" />
                                    <Condition Binding="{Binding ElementName=TextBoxNetworkInterfaceIPAddress, Path=(Validation.HasError)}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="IsEnabled" Value="False" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding NetworkInterface_Enabled}" Value="True" />
                                    <Condition Binding="{Binding NetworkInterface_EnableStaticIPAddress}" Value="True" />
                                    <Condition Binding="{Binding ElementName=ComboBoxNetworkInterfaceSubnetmask, Path=(Validation.HasError)}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="IsEnabled" Value="False" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding NetworkInterface_Enabled}" Value="True" />
                                    <Condition Binding="{Binding NetworkInterface_EnableStaticIPAddress}" Value="True" />
                                    <Condition Binding="{Binding ElementName=TextBoxNetworkInterfaceGateway, Path=(Validation.HasError)}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="IsEnabled" Value="False" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding NetworkInterface_Enabled}" Value="True" />
                                    <Condition Binding="{Binding NetworkInterface_EnableStaticDNS}" Value="True" />
                                    <Condition Binding="{Binding ElementName=TextBoxNetworkInterfacePrimaryDNSServer, Path=(Validation.HasError)}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="IsEnabled" Value="False" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding NetworkInterface_Enabled}" Value="True" />
                                    <Condition Binding="{Binding NetworkInterface_EnableStaticDNS}" Value="True" />
                                    <Condition Binding="{Binding ElementName=TextBoxNetworkInterfaceSecondaryDNSServer, Path=(Validation.HasError)}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="IsEnabled" Value="False" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <!--  IP Scanner  -->
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IPScanner_Enabled}" Value="True" />
                                    <Condition Binding="{Binding IPScanner_InheritHost}" Value="False" />
                                    <Condition Binding="{Binding ElementName=TextBoxIPScannerIPRange, Path=(Validation.HasError)}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="IsEnabled" Value="False" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <!--  Port Scanner  -->
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding PortScanner_Enabled}" Value="True" />
                                    <Condition Binding="{Binding PortScanner_InheritHost}" Value="False" />
                                    <Condition Binding="{Binding ElementName=TextBoxPortScannerHost, Path=(Validation.HasError)}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="IsEnabled" Value="False" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding PortScanner_Enabled}" Value="True" />
                                    <Condition Binding="{Binding ElementName=TextBoxPortScannerPorts, Path=(Validation.HasError)}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="IsEnabled" Value="False" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <!--  Ping Monitor  -->
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding PingMonitor_Enabled}" Value="True" />
                                    <Condition Binding="{Binding PingMonitor_InheritHost}" Value="False" />
                                    <Condition Binding="{Binding ElementName=TextBoxPingMonitorHost, Path=(Validation.HasError)}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="IsEnabled" Value="False" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <!--  Traceroute  -->
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Traceroute_Enabled}" Value="True" />
                                    <Condition Binding="{Binding Traceroute_InheritHost}" Value="False" />
                                    <Condition Binding="{Binding ElementName=TextBoxTracerouteHost, Path=(Validation.HasError)}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="IsEnabled" Value="False" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <!--  DNS Lookup  -->
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding DNSLookup_Enabled}" Value="True" />
                                    <Condition Binding="{Binding DNSLookup_InheritHost}" Value="False" />
                                    <Condition Binding="{Binding ElementName=TextBoxDNSLookupHost, Path=(Validation.HasError)}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="IsEnabled" Value="False" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <!--  Remote Desktop  -->
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding RemoteDesktop_Enabled}" Value="True" />
                                    <Condition Binding="{Binding RemoteDesktop_InheritHost}" Value="False" />
                                    <Condition Binding="{Binding ElementName=TextBoxRemoteDesktopHost, Path=(Validation.HasError)}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="IsEnabled" Value="False" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding RemoteDesktop_Enabled}" Value="True" />
                                    <Condition Binding="{Binding RemoteDesktop_UseCredentials}" Value="True" />
                                    <Condition Binding="{Binding ElementName=TextBoxRemoteDesktopUsername, Path=(Validation.HasError)}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="IsEnabled" Value="False" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding RemoteDesktop_Enabled}" Value="True" />
                                    <Condition Binding="{Binding RemoteDesktop_UseCredentials}" Value="True" />
                                    <Condition Binding="{Binding ElementName=TextBoxRemoteDesktopDomain, Path=(Validation.HasError)}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="IsEnabled" Value="False" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding RemoteDesktop_Enabled}" Value="True" />
                                    <Condition Binding="{Binding RemoteDesktop_UseCredentials}" Value="True" />
                                    <Condition Binding="{Binding RemoteDesktop_IsPasswordEmpty}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="IsEnabled" Value="False" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding RemoteDesktop_Enabled}" Value="True" />
                                    <Condition Binding="{Binding RemoteDesktop_OverridePort}" Value="True" />
                                    <Condition Binding="{Binding ElementName=TextBoxRemoteDesktopPort, Path=(Validation.HasError)}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="IsEnabled" Value="False" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding RemoteDesktop_Enabled}" Value="True" />
                                    <Condition Binding="{Binding RemoteDesktop_OverrideGatewayServer}" Value="True" />
                                    <Condition Binding="{Binding RemoteDesktop_EnableGatewayServer}" Value="True" />
                                    <Condition Binding="{Binding ElementName=TextBoxRemoteDesktopGatewayServerHostname, Path=(Validation.HasError)}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="IsEnabled" Value="False" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding RemoteDesktop_Enabled}" Value="True" />
                                    <Condition Binding="{Binding RemoteDesktop_OverrideGatewayServer}" Value="True" />
                                    <Condition Binding="{Binding RemoteDesktop_EnableGatewayServer}" Value="True" />
                                    <Condition Binding="{Binding RemoteDesktop_GatewayServerLogonMethod}" Value="Userpass" />
                                    <Condition Binding="{Binding RemoteDesktop_UseGatewayServerCredentials}" Value="True" />
                                    <Condition Binding="{Binding ElementName=TextBoxRemoteDesktopGatewayServerUsername, Path=(Validation.HasError)}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="IsEnabled" Value="False" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding RemoteDesktop_Enabled}" Value="True" />
                                    <Condition Binding="{Binding RemoteDesktop_OverrideGatewayServer}" Value="True" />
                                    <Condition Binding="{Binding RemoteDesktop_EnableGatewayServer}" Value="True" />
                                    <Condition Binding="{Binding RemoteDesktop_GatewayServerLogonMethod}" Value="Userpass" />
                                    <Condition Binding="{Binding RemoteDesktop_UseGatewayServerCredentials}" Value="True" />
                                    <Condition Binding="{Binding ElementName=TextBoxRemoteDesktopGatewayServerDomain, Path=(Validation.HasError)}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="IsEnabled" Value="False" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding RemoteDesktop_Enabled}" Value="True" />
                                    <Condition Binding="{Binding RemoteDesktop_OverrideGatewayServer}" Value="True" />
                                    <Condition Binding="{Binding RemoteDesktop_EnableGatewayServer}" Value="True" />
                                    <Condition Binding="{Binding RemoteDesktop_GatewayServerLogonMethod}" Value="Userpass" />
                                    <Condition Binding="{Binding RemoteDesktop_UseGatewayServerCredentials}" Value="True" />
                                    <Condition Binding="{Binding RemoteDesktop_IsGatewayServerPasswordEmpty}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="IsEnabled" Value="False" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <!--  PowerShell  -->
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding PowerShell_Enabled}" Value="True" />
                                    <Condition Binding="{Binding PowerShell_EnableRemoteConsole}" Value="True" />
                                    <Condition Binding="{Binding PowerShell_InheritHost}" Value="False" />
                                    <Condition Binding="{Binding ElementName=TextBoxPowerShellHost, Path=(Validation.HasError)}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="IsEnabled" Value="False" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <!--  PuTTY  -->
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding PuTTY_Enabled}" Value="True" />
                                    <Condition Binding="{Binding PuTTY_InheritHost}" Value="False" />
                                    <Condition Binding="{Binding PuTTY_UseSerial}" Value="False" />
                                    <Condition Binding="{Binding ElementName=TextBoxPuTTYHost, Path=(Validation.HasError)}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="IsEnabled" Value="False" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding PuTTY_Enabled}" Value="True" />
                                    <Condition Binding="{Binding PuTTY_UseSerial}" Value="True" />
                                    <Condition Binding="{Binding ElementName=TextBoxPuTTYSerialLine, Path=(Validation.HasError)}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="IsEnabled" Value="False" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding PuTTY_Enabled}" Value="True" />
                                    <Condition Binding="{Binding PuTTY_OverridePortOrBaud}" Value="True" />
                                    <Condition Binding="{Binding PuTTY_UseSerial}" Value="False" />
                                    <Condition Binding="{Binding ElementName=TextBoxPuTTYPort, Path=(Validation.HasError)}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="IsEnabled" Value="False" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding PuTTY_Enabled}" Value="True" />
                                    <Condition Binding="{Binding PuTTY_OverridePortOrBaud}" Value="True" />
                                    <Condition Binding="{Binding PuTTY_UseSerial}" Value="True" />
                                    <Condition Binding="{Binding ElementName=TextBoxPuTTYBaud, Path=(Validation.HasError)}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="IsEnabled" Value="False" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding PuTTY_Enabled}" Value="True" />
                                    <Condition Binding="{Binding PuTTY_OverrideUsername}" Value="True" />
                                    <Condition Binding="{Binding ElementName=TextBoxPuTTYUsername, Path=(Validation.HasError)}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="IsEnabled" Value="False" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding PuTTY_Enabled}" Value="True" />
                                    <Condition Binding="{Binding PuTTY_OverridePrivateKeyFile}" Value="True" />
                                    <Condition Binding="{Binding ElementName=TextBoxPuTTYPrivateKeyFile, Path=(Validation.HasError)}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="IsEnabled" Value="False" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding PuTTY_Enabled}" Value="True" />
                                    <Condition Binding="{Binding PuTTY_OverrideLogPath}" Value="True" />
                                    <Condition Binding="{Binding ElementName=TextBoxPuTTYLogPath, Path=(Validation.HasError)}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="IsEnabled" Value="False" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding PuTTY_Enabled}" Value="True" />
                                    <Condition Binding="{Binding PuTTY_OverrideLogFileName}" Value="True" />
                                    <Condition Binding="{Binding ElementName=TextBoxPuTTYLogFileName, Path=(Validation.HasError)}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="IsEnabled" Value="False" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <!--  AWS Session Manager  -->
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding AWSSessionManager_Enabled}" Value="True" />
                                    <Condition Binding="{Binding ElementName=TextBoxAwsSessionManagerInstanceId, Path=(Validation.HasError)}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="IsEnabled" Value="False" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding AWSSessionManager_Enabled}" Value="True" />
                                    <Condition Binding="{Binding AWSSessionManager_OverrideProfile}" Value="True" />
                                    <Condition Binding="{Binding ElementName=TextBoxAwsSessionManagerProfile, Path=(Validation.HasError)}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="IsEnabled" Value="False" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding AWSSessionManager_Enabled}" Value="True" />
                                    <Condition Binding="{Binding AWSSessionManager_OverrideRegion}" Value="True" />
                                    <Condition Binding="{Binding ElementName=TextBoxAwsSessionManagerRegion, Path=(Validation.HasError)}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="IsEnabled" Value="False" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <!--  TigerVNC  -->
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding TigerVNC_Enabled}" Value="True" />
                                    <Condition Binding="{Binding TigerVNC_InheritHost}" Value="False" />
                                    <Condition Binding="{Binding ElementName=TextBoxTigerVncHost, Path=(Validation.HasError)}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="IsEnabled" Value="False" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding TigerVNC_Enabled}" Value="True" />
                                    <Condition Binding="{Binding TigerVNC_OverridePort}" Value="True" />
                                    <Condition Binding="{Binding ElementName=TextBoxTigerVncPort, Path=(Validation.HasError)}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="IsEnabled" Value="False" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <!--  WebConsole  -->
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding WebConsole_Enabled}" Value="True" />
                                    <Condition Binding="{Binding ElementName=TextBoxWebConsoleUrl, Path=(Validation.HasError)}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="IsEnabled" Value="False" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <!--  SNMP  -->
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding SNMP_Enabled}" Value="True" />
                                    <Condition Binding="{Binding SNMP_InheritHost}" Value="False" />
                                    <Condition Binding="{Binding ElementName=TextBoxSnmpHost, Path=(Validation.HasError)}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="IsEnabled" Value="False" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding SNMP_Enabled}" Value="True" />
                                    <Condition Binding="{Binding SNMP_OverrideOIDAndMode}" Value="True" />
                                    <Condition Binding="{Binding ElementName=TextBoxSnmpoid, Path=(Validation.HasError)}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="IsEnabled" Value="False" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding SNMP_Enabled}" Value="True" />
                                    <Condition Binding="{Binding SNMP_OverrideVersionAndAuth}" Value="True" />
                                    <Condition Binding="{Binding SNMP_Version}" Value="V1" />
                                    <Condition Binding="{Binding SNMP_IsCommunityEmpty}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="IsEnabled" Value="False" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding SNMP_Enabled}" Value="True" />
                                    <Condition Binding="{Binding SNMP_OverrideVersionAndAuth}" Value="True" />
                                    <Condition Binding="{Binding SNMP_Version}" Value="V2C" />
                                    <Condition Binding="{Binding SNMP_IsCommunityEmpty}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="IsEnabled" Value="False" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding SNMP_Enabled}" Value="True" />
                                    <Condition Binding="{Binding SNMP_OverrideVersionAndAuth}" Value="True" />
                                    <Condition Binding="{Binding SNMP_Version}" Value="V3" />
                                    <Condition Binding="{Binding ElementName=TextBoxSnmpUsername, Path=(Validation.HasError)}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="IsEnabled" Value="False" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding SNMP_Enabled}" Value="True" />
                                    <Condition Binding="{Binding SNMP_OverrideVersionAndAuth}" Value="True" />
                                    <Condition Binding="{Binding SNMP_Version}" Value="V3" />
                                    <Condition Binding="{Binding SNMP_Security}" Value="AuthNoPriv" />
                                    <Condition Binding="{Binding SNMP_IsAuthEmpty}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="IsEnabled" Value="False" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding SNMP_Enabled}" Value="True" />
                                    <Condition Binding="{Binding SNMP_OverrideVersionAndAuth}" Value="True" />
                                    <Condition Binding="{Binding SNMP_Version}" Value="V3" />
                                    <Condition Binding="{Binding SNMP_Security}" Value="AuthPriv" />
                                    <Condition Binding="{Binding SNMP_IsAuthEmpty}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="IsEnabled" Value="False" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding SNMP_Enabled}" Value="True" />
                                    <Condition Binding="{Binding SNMP_OverrideVersionAndAuth}" Value="True" />
                                    <Condition Binding="{Binding SNMP_Version}" Value="V3" />
                                    <Condition Binding="{Binding SNMP_Security}" Value="AuthPriv" />
                                    <Condition Binding="{Binding SNMP_IsPrivEmpty}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="IsEnabled" Value="False" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <!--  Wake on LAN  -->
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding WakeOnLAN_Enabled}" Value="True" />
                                    <Condition Binding="{Binding ElementName=TextBoxWakeOnLanMacAddress, Path=(Validation.HasError)}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="IsEnabled" Value="False" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding WakeOnLAN_Enabled}" Value="True" />
                                    <Condition Binding="{Binding ElementName=TextBoxWakeOnLanBroadcast, Path=(Validation.HasError)}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="IsEnabled" Value="False" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <!--  Whois  -->
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Whois_Enabled}" Value="True" />
                                    <Condition Binding="{Binding Whois_InheritHost}" Value="False" />
                                    <Condition Binding="{Binding ElementName=TextBoxWhoisDomain, Path=(Validation.HasError)}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="IsEnabled" Value="False" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <!--  IP Geolocation  -->
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IPGeolocation_Enabled}" Value="True" />
                                    <Condition Binding="{Binding IPGeolocation_InheritHost}" Value="False" />
                                    <Condition Binding="{Binding ElementName=TextBoxIPGeolocationHost, Path=(Validation.HasError)}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="IsEnabled" Value="False" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <Button
                Command="{Binding CancelCommand}"
                Content="{x:Static localization:Strings.Cancel}"
                IsCancel="True"
                Style="{StaticResource DefaultButton}" />
        </StackPanel>
    </Grid>
</UserControl>